// ==UserScript==
// @name         Digiseller: Banana GO
// @namespace    http://tampermonkey.net/
// @version      4.6
// @description  –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ—Ö–æ–¥ + –∏—Å—Ç–æ—Ä–∏—è/–∑–∞–∫—Ä–µ–ø—ã/–∑–∞–∫–ª–∞–¥–∫–∏, —Å—Ç–∏–ª—å –ø–æ–∏—Å–∫–∞ vibe, –ø–∞—Å—Ö–∞–ª–∫–∞! –û–±—Ä–µ–∑–∫–∞ –¥–ª–∏–Ω–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π —Ç—Ä–æ–µ—Ç–æ—á–∏–µ–º ü¶çüçå, –≥—Ä–∏–¥-–≤—ã–±–æ—Ä –ø—Ä–æ–¥–∞–≤—Ü–∞, —Å—Ç–∞—Ç–∏—á–Ω—ã–π —Å—Ç–∏–ª—å –∫–Ω–æ–ø–æ–∫ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–∞–Ω–µ–ª–∏, –∏—Å—Ç–æ—Ä–∏—è –ø–æ–∏—Å–∫–∞ –ø–æ email.
// @author       vibe.coding
// @match        https://my.digiseller.ru/*
// @match        https://ggsel.net/*
// @match        https://ggsel.net/catalog/product/*
// @run-at       document-end
// @grant        none
// ==/UserScript==
(function() {
    'use strict';
// === Banana ü¶çüçå Product Seller Redirect v5 ===
if (
  window.location.hostname.includes('ggsel.net') &&
  /^\/catalog\/product\/\d+/.test(window.location.pathname) &&
  (
    window.location.search.includes('exec=1') ||
    window.location.search.includes('extract_seller_from_hist=1')
  )
) {

  function tryRedirectToSellerBanana(attempt = 1) {
    // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä: –∏—â–µ–º seller –ø–æ data-test –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ href
    let link =
      document.querySelector('a[data-test="sellerName"][href^="/sellers/"]') ||
      document.querySelector('a[href^="/sellers/"]');
    let m = link && link.getAttribute('href').match(/\/sellers\/(\d+)/);
    if (m && m[1]) {
      // –ë–∞–Ω–∞–Ω–æ–≤—ã–π –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥!
      window.location.href = `https://my.digiseller.ru/asp/seller_messages.asp?id_s=${m[1]}`;
    } else {
      if (attempt < 7) {
        setTimeout(() => tryRedirectToSellerBanana(attempt + 1), 300 + attempt * 180);
      } else {
        console.log("ü¶çüçå [Banana GO] –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø—Ä–æ–¥–∞–≤—Ü–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ç–æ–≤–∞—Ä–∞!");
      }
    }
  }
  setTimeout(() => tryRedirectToSellerBanana(), 600);
  return; // –í—Å—ë, –¥–∞–ª—å—à–µ —Å–∫—Ä–∏–ø—Ç –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
}


    const isGgsel = window.location.hostname.includes('ggsel.net');
    const PANEL_STATE_KEY = 'vibe-panel-state';


   ///// if (isGgsel) return;

    // --- CSS ---
    const vibeCSS = `
.ds-glow-btn { transition: box-shadow 0.16s, filter 0.13s;}
.ds-glow-btn:hover { box-shadow: 0 0 18px 0 #ffd700cc, 0 1px 8px #ffe680b0; filter: brightness(1.09);}
.ds-glow-btn.ds-green:hover { box-shadow: 0 0 18px 0 #8be881cc, 0 1px 8px #cafcd1b0;}
#vibe-quickpanel {
    position: fixed; right: 32px; bottom: 32px; z-index: 99999999;
    background: rgba(28,32,44,0.98); color: #ffe37e; padding: 22px 30px 18px 28px;
    border-radius: 18px; font-size: 17px; line-height: 1.7; font-family: Consolas, Segoe UI, Arial, sans-serif;
    box-shadow: 0 10px 38px #000b,0 1.5px 4px #000a; border: 2px solid gold; min-width: 320px; min-height: 48px;
    display: flex; flex-direction: column; align-items: flex-start;
    opacity: 1; transform: scale(1); transition: opacity 0.32s, transform 0.22s;
}
#vibe-quickpanel.vibe-hide {
    opacity: 0; pointer-events:none; transform: scale(0.96) translateY(32px);
}
#vibe-quickpanel-collapsed {
    position: fixed; right: 30px; bottom: 30px; width: 60px; height: 60px;
    background: rgba(30,34,44,0.97); color: gold; border-radius: 50%; border: 2px solid gold; z-index: 99999998;
    box-shadow: 0 6px 22px #0008; font-size: 34px; display: flex; align-items: center; justify-content: center;
    cursor: pointer;
    opacity: 1; transform: scale(1); transition: opacity 0.27s, transform 0.19s;
}
#vibe-quickpanel-collapsed.vibe-hide {
    opacity: 0; pointer-events:none; transform: scale(0.75) translateY(30px);
}
#vibe-quickpanel-collapsed:hover { filter: brightness(1.15);}
#vibe-quickpanel-close {
    position: absolute; top: 14px; right: 14px; width: 36px; height: 36px; display: flex; align-items: center; justify-content: center;
    background: rgba(38,38,42,0.87); border-radius: 25%; border: 2px solid gold; color: gold;
    font-size: 22px; font-weight: bold; cursor: pointer; opacity: 0.88; z-index:10; transition: background .15s, opacity .15s, box-shadow .15s;
    box-shadow: 0 3px 14px #0005;
}
#vibe-quickpanel-close:hover { opacity: 1; background: #2c2f38; box-shadow: 0 6px 26px #0008;}
#vibe-quickpanel-header-row { display: flex; align-items: center; width: 100%; margin-bottom: 8px; margin-top: 0; }
#vibe-quickpanel-title { font-size: 19px; font-weight: bold; color: gold; flex: none; letter-spacing:.02em; margin-right: 4px; display:flex; align-items:center; gap:2px;}
#vibe-header-group { display:flex; align-items:center; gap:2px; flex:1 0 auto;}
#vibe-history-btn { font-size: 26px; margin-left: 0; cursor: pointer; user-select:none; border-radius:8px; background:none; border:none; transition: filter .16s, background .12s; padding: 2px 6px 2px 3px; outline:none; height: 32px; display: flex; align-items: center;}
#vibe-history-btn:active, #vibe-history-btn:hover { background: #23272b; filter: brightness(1.14);}
#vibe-add-bookmark-btn { font-size: 19px; margin-left: 7px; cursor: pointer; background: none; border: none; color: gold; transition: filter 0.15s; border-radius: 7px;}
#vibe-add-bookmark-btn:hover { filter: brightness(1.5);}
.vibe-history-section { width:100%; margin-bottom:14px; transition: max-height .24s cubic-bezier(.4,0,.2,1), opacity .19s; overflow:hidden; max-height:600px; opacity:1;}
.vibe-history-section.hide { max-height:0; opacity:0; pointer-events:none;}
.vibe-history-title { margin-top:2px; color:gold;font-size:15px;margin-bottom:2px;font-weight:600;letter-spacing:.04em;display:flex;align-items:center;gap:3px;}
#vibe-history-list {
    width: 100%;
    margin-top: 0;
    margin-bottom: 0;
    padding-left: 0;
    list-style: none;
    max-height: 420px;
    overflow-y: auto;
    scrollbar-width: thin;           /* –£–∑–∫–∞—è –ø–æ–ª–æ—Å–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ */
    scrollbar-color: gold #23272b;   /* –¶–≤–µ—Ç –ø–æ–ª–æ—Å—ã ‚Äî gold, —Ñ–æ–Ω ‚Äî —Ç—ë–º–Ω—ã–π */
    padding-right: 12px;             /* –°–¥–≤–∏–≥–∞–µ–º —Ç–µ–∫—Å—Ç, —á—Ç–æ–±—ã –ø–æ–ª–æ—Å–∞ –Ω–µ –∑–∞–∫—Ä—ã–≤–∞–ª–∞ */
}


#vibe-history-pins { width:100%;margin-top:0;margin-bottom:0;padding-left:0;list-style:none;}
.vibe-history-item, .vibe-history-pin { display:flex;align-items:center;gap:8px;margin:0 0 2px 0;padding:4px 0 4px 0;border-bottom:1px solid #3332; font-size:15px;color:#ffe37e;cursor:pointer;border-radius:5px;transition:background .14s;}
.vibe-history-item:hover, .vibe-history-pin:hover { background:#24262d;}
.vibe-hist-action { margin-left:auto;display:flex;align-items:center;gap:7px;}
.vibe-pin, .vibe-unpin { font-size:15px;cursor:pointer;opacity:.7;padding:1px 4px;transition:opacity .14s;}
.vibe-pin:hover, .vibe-unpin:hover { opacity:1;}
.vibe-remove { font-size:15px;color:#e57d7d;cursor:pointer;opacity:.7;padding:1px 4px;transition:opacity .14s;}
.vibe-remove:hover { opacity:1;}
.vibe-edit { font-size:15px;color:#ffe37e;cursor:pointer;opacity:.7;padding:1px 4px;transition:opacity .14s;}
.vibe-edit:hover { opacity:1; color: #f5eb70;}
#vibe-jump-input-group { display: flex; width: 100%; align-items: center; margin-bottom:0;}
#vibe-jump-input { font-size: 17px; padding: 8px 14px 8px 12px; border-radius: 8px; border: 1.3px solid #ffe37e; outline: none; width: 90%; background: #25272e; color: #ffe37e; font-family: inherit; margin-right: 0; transition: box-shadow .14s; resize: vertical; min-height: 39px; max-height: 148px;}
#vibe-jump-input:focus { box-shadow: 0 0 0 2px gold; }
#vibe-jump-search-btn, #vibe-jump-search-btn:hover, #vibe-jump-search-btn:focus { box-shadow: none !important; filter: none !important; outline: none !important; background: none;}
#vibe-jump-search-btn svg, #vibe-jump-search-btn:hover svg { filter: none !important; box-shadow: none !important;}
#vibe-jump-search-btn { margin-left: 5px; padding: 8px 10px 8px 12px; color: gold; font-size: 21px; border-radius: 8px; transition: background .15s; border: none; cursor: pointer;}
#vibe-jump-search-btn:hover { background: #2c2f38; }
/* ======= ellipsis/–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —à–∏—Ä–∏–Ω—ã ======= */
.vibe-history-item span,
.vibe-history-pin span {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    max-width: 320px;
    display: inline-block;
    vertical-align: middle;
}
/* ==== –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–¥–∞–≤—Ü–∞ ==== */
#vibe-seller-choose-list {
    margin: 18px 0 7px 0;
    width: 100%;
    padding: 0;
}
.vibe-seller-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 0 24px;
    align-items: start;
}
.vibe-seller-list {
    display: flex;
    flex-direction: column;
    gap: 0;
}
.vibe-seller-link {
    color: #77fcab;
    background: none;
    border: none;
    padding: 3.5px 0 3.5px 0;
    margin: 0;
    text-align: left;
    width: 100%;
    font-family: inherit;
    font-size: 17px;
    line-height: 1.37;
    border-radius: 7px;
    cursor: pointer;
    transition: background 0.12s, color 0.11s;
    box-shadow: none;
    outline: none;
    font-weight: 400;
    letter-spacing: 0.01em;
    text-shadow: none;
    display: block;
}
.vibe-seller-link:hover, .vibe-seller-link:focus {
    background: #2e412e;
    color: #ffe37e;
}
/* --- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–∫—Ä–µ–ø–∞ --- */
.vibe-edit-modal-bg {
    position: fixed;
    left: 0; top: 0; width: 100vw; height: 100vh;
    background: rgba(14,17,23,0.38);
    z-index: 999999999;
    display: flex; align-items: flex-start; justify-content: center;
}
.vibe-edit-modal {
    margin-top: 90px;
    background: #24262d;
    border: 2px solid gold;
    border-radius: 18px;
    box-shadow: 0 8px 38px #000b;
    padding: 28px 26px 20px 26px;
    min-width: 320px;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    animation: vibeFadeIn .23s;
}
@keyframes vibeFadeIn { from { opacity: 0; transform: translateY(-24px);} to { opacity: 1; transform: none;}}
.vibe-edit-modal input {
    background: #181820;
    border: 1.5px solid #ffe37e;
    border-radius: 8px;
    color: #ffe37e;
    font-size: 17px;
    padding: 8px 13px;
    margin-bottom: 12px;
    outline: none;
}
@keyframes vibeGrowIn {
    from {
        opacity: 0;
        transform: scale(0.6) translate(90px, 90px);
    }
    to {
        opacity: 1;
        transform: scale(1) translate(0, 0);
    }
}
.vibe-edit-modal button {
    background: #ffe37e;
    color: #24262d;
    font-weight: 600;
    border-radius: 8px;
    border: none;
    font-size: 15px;
    padding: 8px 14px;
    margin-right: 7px;
    cursor: pointer;
    transition: background .14s;
}
.vibe-edit-modal button:hover {
    background: gold;
}
.vibe-edit-modal .vibe-cancel {
    background: #44444a;
    color: #ffe37e;
    margin-right: 0;
}
.vibe-clear-history-btn {
    margin-right:150px;
    font-size:13px;
    background:rgba(28,32,44,0.98);
    color:#ffe37e;
    border:1px solid gold;
    border-radius:7px;
    padding:2px 11px;
    cursor:pointer;
    transition:.13s;
}
.vibe-clear-history-btn:hover {
    background: #2c2f38 !important;
    color: gold !important;
    border-color: gold !important;
}
`;

    if (!document.getElementById('vibe-css')) {
        let style = document.createElement('style');
        style.id = 'vibe-css';
        style.textContent = vibeCSS;
        document.head.appendChild(style);
    }

    const STORAGE_KEY = 'vibe-quick-jump-data';
    const SELLER_CACHE_KEY = 'vibe-seller-cache';
    const HISTORY_KEY = 'vibe-jump-history';
    const HISTORY_PINS_KEY = 'vibe-jump-pins';

    // –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–π–¥—É—Ç –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏...
function getNextCustomBookmarkName() {
    let pins = getPins();
    let base = "–ö–∞—Å—Ç–æ–º–Ω–∞—è –∑–∞–∫–ª–∞–¥–∫–∞";
    let nums = pins
        .filter(x=>x.type === "bookmark" && x.desc && x.desc.startsWith(base))
        .map(x=>{
            let m = x.desc.match(/^–ö–∞—Å—Ç–æ–º–Ω–∞—è –∑–∞–∫–ª–∞–¥–∫–∞\s*(\d*)/);
            return m && m[1] ? parseInt(m[1],10) : null;
        }).filter(x=>x);
    let n = 1;
    while (nums.includes(n)) n++;
    return base + ' ' + n;
}

function addCustomBookmark() {
    const url = window.location.href;
    const desc = getNextCustomBookmarkName();
    addToPins({ type: 'bookmark', value: url, desc: desc });
    renderHistory();
}

function extractOrderNumbers(val) {
    return val.replace(/[\s,;]+/g, ',').split(',');
}

function goToOrders(orderIds) {
    const validIds = orderIds.slice().reverse().map(x => x.replace(/[^\d]/g, '')).filter(x => x.length >= 3);
    if (validIds.length === 1) {
        window.location.href = `https://my.digiseller.ru/asp/inv_of_buyer.asp?id_i=${validIds[0]}`;
    } else {
        validIds.forEach(orderId => {
            window.open(`https://my.digiseller.ru/asp/inv_of_buyer.asp?id_i=${orderId}`, '_blank');
        });
    }
    setMsg('–û—Ç–∫—Ä—ã—Ç–æ –∑–∞–∫–∞–∑–æ–≤: ' + validIds.length, true);
    addToHistory({type:'orders', value: orderIds.join(', '), desc: '–ó–∞–∫–∞–∑—ã: ' + validIds.join(', ')});
}


function sellerCache(loadOnly) {
    let cache;
    try { cache = JSON.parse(localStorage.getItem(SELLER_CACHE_KEY) || '{}'); }
    catch(e) { cache = {}; }
    if (loadOnly) return cache;
    return {
        get: function(nick) {
            if (!nick) return null;
            let c = sellerCache(true);
            return c[nick.trim().toLowerCase()] || null;
        },
        set: function(nick, id) {
            if (!nick || !id) return;
            let c = sellerCache(true);
            c[nick.trim().toLowerCase()] = id.toString();
            localStorage.setItem(SELLER_CACHE_KEY, JSON.stringify(c));
        },
        all: function() { return sellerCache(true); }
    };
}

function getHistory() {
    try { return JSON.parse(localStorage.getItem(HISTORY_KEY) || '[]'); }
    catch(e){ return []; }
}

function getPins() {
    try { return JSON.parse(localStorage.getItem(HISTORY_PINS_KEY) || '[]'); }
    catch(e){ return []; }
}

function setHistory(arr) {
    localStorage.setItem(HISTORY_KEY, JSON.stringify(arr.slice(0,100)));
}

function setPins(arr) {
    localStorage.setItem(HISTORY_PINS_KEY, JSON.stringify(arr.slice(0,8)));
}

function addToHistory(item) {
    let arr = getHistory();
    if (arr.length && arr[0].type === item.type && arr[0].value === item.value) return;
    arr.unshift(item);
    setHistory(arr);
    renderHistory();
}

function addToPins(item) {
    let arr = getPins();
    if (arr.some(x=>x.value===item.value && x.type === item.type)) return;
    arr.unshift(item);
    setPins(arr);
    renderHistory();
}

function removeFromHistory(idx) {
    let arr = getHistory();
    arr.splice(idx,1);
    setHistory(arr);
    renderHistory();
}

function removeFromPins(idx) {
    let arr = getPins();
    arr.splice(idx,1);
    setPins(arr);
    renderHistory();
}

function unpin(idx) {
    let arr = getPins();
    let item = arr[idx];
    arr.splice(idx,1);
    setPins(arr);
    addToHistory(item);
    renderHistory();
}

function pinHistory(idx) {
    let arr = getHistory();
    let item = arr[idx];
    removeFromHistory(idx);
    addToPins(item);
    renderHistory();
}

function log(msg) {
    setMsg(msg, true);
    console.log(`[DS-QUICK-JUMP-HIST] ${msg}`);
}

let showHistory = false;
let editModal = null;

function showEditModal(idx, currentDesc) {
    closeEditModal();
    editModal = document.createElement('div');
    editModal.className = 'vibe-edit-modal-bg';
    editModal.innerHTML = `
    <form class="vibe-edit-modal">
        <label style="color:gold;font-weight:500;font-size:15px;margin-bottom:3px;">–ù–æ–≤–æ–µ –∏–º—è –∑–∞–∫–ª–∞–¥–∫–∏/–∑–∞–∫—Ä–µ–ø–∞:</label>
        <input type="text" id="vibe-edit-modal-input" value="${escapeHtml(currentDesc||'')}" autocomplete="off" autofocus style="margin-bottom:14px;">
        <div style="display:flex;gap:8px;justify-content:flex-end;">
            <button type="submit" class="vibe-ok">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
            <button type="button" class="vibe-cancel">–û—Ç–º–µ–Ω–∞</button>
        </div>
    </form>
    `;
    document.body.appendChild(editModal);
    setTimeout(()=>{ let inp = document.getElementById('vibe-edit-modal-input'); if (inp) inp.focus(); },50);
    editModal.querySelector('form').onsubmit = function(e){
        e.preventDefault();
        let inp = document.getElementById('vibe-edit-modal-input');
        if (inp && inp.value.trim()) {
            let pins = getPins();
            pins[idx].desc = inp.value.trim();
            setPins(pins);
            renderHistory();
            closeEditModal();
        }
    };
    editModal.querySelector('.vibe-cancel').onclick = closeEditModal;
    setTimeout(()=>{
        editModal.addEventListener('keydown', function(e){
            if(e.key === 'Escape') closeEditModal();
        });
    },50);
    editModal.addEventListener('mousedown', function(e){
        if(e.target === editModal) closeEditModal();
    });
}

function closeEditModal() {
    if(editModal) {
        editModal.remove();
        editModal = null;
    }
}

function escapeHtml(text) {
    return (text||"").replace(/[<>&"]/g, function(ch) {
        return ({
            '<':'&lt;',
            '>':'&gt;',
            '&':'&amp;',
            '"':'&quot;'
        })[ch] || ch;
    });
}

function renderHistory() {
    let sec = document.getElementById('vibe-history-section');
    if (!sec) return;
    sec.className = 'vibe-history-section' + (showHistory ? '' : ' hide');
    let pins = getPins();
    let pinList = document.getElementById('vibe-history-pins');
    if (pinList) {
        pinList.innerHTML = pins.length
            ? pins.map((item, i) =>
                `<li class="vibe-history-pin" data-pindex="${i}" title="${item.desc||item.value}">
                    <span>${item.desc||item.value}</span>
                    <div class="vibe-hist-action">
                        <span class="vibe-edit" title="–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å">‚úèÔ∏è</span>
                        <span class="vibe-unpin" title="–û—Ç–∫—Ä–µ–ø–∏—Ç—å">üìå</span>
                        <span class="vibe-remove" title="–£–¥–∞–ª–∏—Ç—å">‚úñ</span>
                    </div>
                </li>`
              ).join('')
            : `<li style="color:#666;font-size:14px;">(–ù–µ—Ç –∑–∞–∫—Ä–µ–ø–æ–≤)</li>`;
    }
    let titleBar = document.getElementById('vibe-pins-title-bar');
    if (titleBar && !document.getElementById('vibe-add-bookmark-btn')) {
        let starBtn = document.createElement('button');
        starBtn.id = 'vibe-add-bookmark-btn';
        starBtn.title = '–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—É—é –∑–∞–∫–ª–∞–¥–∫—É';
        starBtn.textContent = '‚≠ê';
        starBtn.style.cssText = 'margin-left:7px;font-size:19px;cursor:pointer;background:none;border:none;color:gold;transition:filter 0.15s;border-radius:7px;';
        starBtn.onmouseover = () => starBtn.style.filter = 'brightness(1.5)';
        starBtn.onmouseout  = () => starBtn.style.filter = '';
        starBtn.onclick = addCustomBookmark;
        titleBar.appendChild(starBtn);
    }
    let hist = getHistory();
    let hList = document.getElementById('vibe-history-list');
    if (hList) {
        hList.innerHTML = hist.length
            ? hist.map((item, i) =>
                `<li class="vibe-history-item" data-hindex="${i}" title="${item.desc||item.value}">
                    <span>${item.desc||item.value}</span>
                    <div class="vibe-hist-action">
                        <span class="vibe-pin" title="–ó–∞–∫—Ä–µ–ø–∏—Ç—å">üìå</span>
                        <span class="vibe-remove" title="–£–¥–∞–ª–∏—Ç—å">‚úñ</span>
                    </div>
                </li>`
            ).join('')
            : `<li style="color:#666;font-size:14px;">(–ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞)</li>`;
    }
}

function createPanel() {
    let old = document.getElementById('vibe-quickpanel');
    if (old) {
        old.classList.add('vibe-hide');
        setTimeout(()=>old.remove(), 320);
    }
    let panel = document.createElement('div');
    panel.id = 'vibe-quickpanel';
    panel.innerHTML = `
      <div id="vibe-history-section" class="vibe-history-section hide">
        <div id="vibe-pins-title-bar" class="vibe-history-title">–ó–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–µ</div>
        <ul id="vibe-history-pins"></ul>
        <div style="display:flex;align-items:center;justify-content:space-between;">
            <div class="vibe-history-title">–ò—Å—Ç–æ—Ä–∏—è</div>
            <button id="vibe-clear-history-btn" class="vibe-clear-history-btn" title="–£–¥–∞–ª–∏—Ç—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é">üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å</button>
        </div>
        <ul id="vibe-history-list"></ul>
      </div>
      <div id="vibe-quickpanel-header-row">
        <div id="vibe-quickpanel-title">Banana GO</div>
        <button id="vibe-history-btn" title="–ò—Å—Ç–æ—Ä–∏—è">ü¶ç</button>
      </div>
      <div id="vibe-jump-input-group">
        <input id="vibe-jump-input" type="text" placeholder="–ü–µ—Ä–µ–π—Ç–∏ –∫..." autocomplete="off" />
        <button id="vibe-jump-search-btn" title="–ü–µ—Ä–µ–π—Ç–∏" class="ds-glow-btn">
          <svg width="22" height="22" viewBox="0 0 20 20"><circle cx="8.5" cy="8.5" r="7" stroke="gold" stroke-width="2" fill="none"/><line x1="15" y1="15" x2="11.7" y2="11.7" stroke="gold" stroke-width="2" stroke-linecap="round"/></svg>
        </button>
      </div>
      <div id="vibe-jump-msg"></div>
      <div id="vibe-quickpanel-close" title="–°–≤–µ—Ä–Ω—É—Ç—å">‚úï</div>
      <div id="vibe-seller-choose-wrap" style="display:none;"></div>
    `;
    document.body.appendChild(panel);
// ü¶çüçå Banana Monkey Patch: –∑–∞–º–µ–Ω—è–µ–º input –Ω–∞ textarea
(function monkeyInputToTextarea() {
    let oldInput = document.getElementById('vibe-jump-input');
    if (!oldInput || oldInput.tagName === 'TEXTAREA') return;
    let textarea = document.createElement('textarea');
    textarea.id = oldInput.id;
    textarea.className = oldInput.className;
    textarea.placeholder = oldInput.placeholder;
    textarea.autocomplete = oldInput.autocomplete;
    textarea.style.cssText = oldInput.style.cssText;
    textarea.value = oldInput.value || '';
    textarea.rows = 1;
    textarea.setAttribute('spellcheck', 'false');
    oldInput.parentNode.replaceChild(textarea, oldInput);
})();


    document.getElementById('vibe-quickpanel-close').onclick = collapsePanel;
    document.getElementById('vibe-jump-search-btn').onclick = function() {
        jumpAction();
        setTimeout(() => {
            document.getElementById('vibe-jump-input').style.width = '';
        }, 50);
    };
    document.getElementById('vibe-jump-input').addEventListener('keydown', function(e) {
        if (e.key === 'Enter') {
            jumpAction();
            setTimeout(() => {
                document.getElementById('vibe-jump-input').style.width = '';
            }, 50);
        }
    });
    document.getElementById('vibe-jump-input').addEventListener('paste', function(e) {
        setTimeout(() => {
            jumpAction();
            setTimeout(() => {
                document.getElementById('vibe-jump-input').style.width = '';
            }, 50);
        }, 80);
    });

    let histBtn = document.getElementById('vibe-history-btn');
    histBtn.onclick = function() {
        showHistory = !showHistory;
        renderHistory();
    };
    panel.addEventListener('click', function(e) {
        let editBtn = e.target.closest('.vibe-edit');
        if (editBtn) {
            let li = editBtn.closest('.vibe-history-pin');
            if (li) {
                let pins = getPins();
                let i = Number(li.dataset.pindex);
                let current = pins[i];
                showEditModal(i, current.desc || current.value);
            }
            return;
        }
        let pinBtn = e.target.closest('.vibe-pin');
        if (pinBtn) {
            let li = pinBtn.closest('.vibe-history-item');
            if (li) pinHistory(Number(li.dataset.hindex));
            return;
        }
        let unpinBtn = e.target.closest('.vibe-unpin');
        if (unpinBtn) {
            let li = unpinBtn.closest('.vibe-history-pin');
            if (li) unpin(Number(li.dataset.pindex));
            return;
        }
        let rmBtn = e.target.closest('.vibe-remove');
        if (rmBtn) {
            let liH = rmBtn.closest('.vibe-history-item');
            if (liH) removeFromHistory(Number(liH.dataset.hindex));
            let liP = rmBtn.closest('.vibe-history-pin');
            if (liP) removeFromPins(Number(liP.dataset.pindex));
            return;
        }
        let item = e.target.closest('.vibe-history-item');
        if (item && !e.target.classList.contains('vibe-pin') && !e.target.classList.contains('vibe-remove')) {
            doHistoryAction(getHistory()[Number(item.dataset.hindex)]);
            return;
        }
        let pin = e.target.closest('.vibe-history-pin');
        if (pin && !e.target.classList.contains('vibe-unpin') && !e.target.classList.contains('vibe-remove') && !e.target.classList.contains('vibe-edit')) {
            doHistoryAction(getPins()[Number(pin.dataset.pindex)]);
            return;
        }
    });

    let msg = localStorage.getItem(STORAGE_KEY+'_msg');
    if (msg) setMsg(msg, true);

    setTimeout(() => {
        let input = document.getElementById('vibe-jump-input');
        if (input) input.focus();
    }, 100);

    setTimeout(() => {
        let btn = document.getElementById('vibe-clear-history-btn');
        if (btn) {
            btn.onclick = function() {
                setHistory([]);
                renderHistory();
            };
        }
    }, 120);

    renderHistory();
    localStorage.setItem(PANEL_STATE_KEY, 'panel');
    // --- –ë–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –µ—Å–ª–∏ –º—ã—à–∫–∞ –Ω–∞–¥ –∏—Å—Ç–æ—Ä–∏–µ–π ---
    setTimeout(() => {
        const hist = document.getElementById('vibe-history-list');
        if (!hist) return;
        hist.addEventListener('wheel', function(e) {
            const scrollTop = hist.scrollTop;
            const scrollHeight = hist.scrollHeight;
            const clientHeight = hist.clientHeight;
            const delta = e.deltaY;
            const atTop = scrollTop === 0 && delta < 0;
            const atBottom = scrollTop + clientHeight >= scrollHeight && delta > 0;
            e.stopPropagation();
            e.preventDefault();
            // –ï—Å–ª–∏ –µ—Å—Ç—å –∫—É–¥–∞ —Å–∫—Ä–æ–ª–ª–∏—Ç—å ‚Äî —Å–∫—Ä–æ–ª–ª–∏–º —Ç–æ–ª—å–∫–æ –∏—Å—Ç–æ—Ä–∏—é
            if ((delta < 0 && !atTop) || (delta > 0 && !atBottom)) {
                hist.scrollTop += delta;
            }
        }, { passive: false });
    }, 50);

}

function collapsePanel() {
    let panel = document.getElementById('vibe-quickpanel');
    if (panel) {
        panel.classList.add('vibe-hide');
        setTimeout(()=>panel.remove(), 320);
    }
    let btn = document.createElement('div');
    btn.id = 'vibe-quickpanel-collapsed';
    btn.title = "–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –±—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ—Ö–æ–¥";
    btn.innerHTML = 'üçå';
    btn.classList.add('vibe-hide');
    setTimeout(()=>{
        btn.classList.remove('vibe-hide');
    }, 20);
    btn.onclick = function() {
        btn.classList.add('vibe-hide');
        setTimeout(()=>{
            btn.remove();
            createPanel();
        }, 270);
    };
    document.body.appendChild(btn);
    localStorage.setItem(PANEL_STATE_KEY, 'collapsed');
}

function restorePanelState() {
    let state = localStorage.getItem(PANEL_STATE_KEY) || 'panel';
    if (state === 'panel') {
        createPanel();
    } else {
        let btn = document.createElement('div');
        btn.id = 'vibe-quickpanel-collapsed';
        btn.title = "–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –±—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ—Ö–æ–¥";
        btn.innerHTML = 'üçå';
        btn.classList.add('vibe-hide');
        setTimeout(()=>{ btn.classList.remove('vibe-hide'); }, 20);
        btn.onclick = function() {
            btn.classList.add('vibe-hide');
            setTimeout(()=>{
                btn.remove();
                createPanel();
            }, 270);
        };
        document.body.appendChild(btn);
    }
}

function setMsg(text, save = false) {
    let m = document.getElementById('vibe-jump-msg');
    if (!m) return;
    if (typeof text === "string" && text.startsWith("BANANA!!!")) {
        m.innerHTML = text;
    } else {
        m.textContent = text;
    }
    if (save) localStorage.setItem(STORAGE_KEY+'_msg', text || '');
}

function playBananaEasterEgg() {
    const monkeySound = "https://assets.mixkit.co/active_storage/sfx/106/106-preview.mp3";
    let audio = new Audio(monkeySound);
    audio.volume = 0.7;
    audio.play();
}

function tryExtractSellerIdFromPage(nick) {
    let sellerLinks = Array.from(document.querySelectorAll('a[href*="/sellers/"]'));
    for (let link of sellerLinks) {
        let href = link.getAttribute('href');
        let idMatch = href && href.match(/sellers\/(\d+)/);
        if (idMatch) {
            let linkNick = link.textContent.trim().toLowerCase();
            if (!nick || (linkNick === nick.trim().toLowerCase())) {
                return idMatch[1];
            }
        }
    }
    return null;
}

function doHistoryAction(item) {
    if (!item) return;
    if (item.type === 'orders') {
        goToOrders(extractOrderNumbers(item.value));
    } else if (item.type === 'seller' && item.sellerId) {
        window.location.href = `https://my.digiseller.ru/asp/seller_messages.asp?id_s=${item.sellerId}`;
    } else if (item.type === 'nick') {
        let cache = sellerCache();
        let sellerId = cache.get(item.value);
        if (sellerId) {
            window.location.href = `https://my.digiseller.ru/asp/seller_messages.asp?id_s=${sellerId}`;
        } else {
            localStorage.setItem(STORAGE_KEY+'_pending_seller', item.value);
            window.location.href = `https://my.digiseller.ru/asp/search.asp?txt_NameSeller=${encodeURIComponent(item.value)}`;
        }
    } else if (item.type === 'ggsel') {
        window.location.href = item.value + (item.value.includes('?') ? '&' : '?') + 'extract_seller_from_hist=1';
    } else if (item.type === 'bookmark') {
        window.open(item.value, '_blank');
    } else if (item.type === 'email') {
        window.location.href = `https://my.digiseller.ru/asp/goods_of_buyer.asp?Email=${encodeURIComponent(item.value)}`;
    }
    else if (item.type === 'ip') {
        window.location.href = `https://my.digiseller.ru/asp/goods_of_buyer.asp?IP=${encodeURIComponent(item.value)}`;
    }
}

function clearInput() {
    let input = document.getElementById('vibe-jump-input');
    if (input) {
        input.value = '';
        input.style.width = '';
        input.focus();
    }
}

function isIPv4(str) {
    str = str.trim();
    if (!/^(\d{1,3}\.){3}\d{1,3}$/.test(str)) return false;
    return str.split('.').every(seg => {
        if (!/^\d{1,3}$/.test(seg)) return false;
        if (seg.length > 1 && seg[0] === '0') return false;
        let n = Number(seg);
        return n >= 0 && n <= 255;
    });
}

function isEmail(str) {
    return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(str.trim());
}

// üçå –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–∞–Ω–∞–Ω–æ–≤—ã–π —Å–ø–ª–∏—Ç—Ç–µ—Ä: —Ä–∞–∑–±–∏–≤–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –Ω–∞ –Ω–∏–∫–∏ –ø–æ –∑–∞–ø—è—Ç—ã–º, –ø–µ—Ä–µ–Ω–æ—Å–∞–º, ; –∏ —Ç–∞–±—É–ª—è—Ü–∏–∏
function splitNicksBanana(str) {
    return str
        .replace(/[\n\r\t;]+/g, ',') // –≤—Å–µ –ø–µ—Ä–µ–Ω–æ—Å—ã, —Ç–∞–±—ã, ; –ø—Ä–µ–≤—Ä–∞—â–∞–µ–º –≤ –∑–∞–ø—è—Ç—É—é
        .split(',')
        .map(s => s.trim())
        .filter(Boolean);
}

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è jumpAction —Å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º –ø–∞—Ä—Å–∏–Ω–≥–æ–º –∑–∞–∫–∞–∑–æ–≤:
function jumpAction() {
    let input = document.getElementById('vibe-jump-input');
    if (!input) return;
    let value = input.value.trim();
// ========== –ë–ª–æ–∫ –ø–æ–∏—Å–∫–∞ –ø–æ –¢–û–í–ê–†–ê–ú (Banana ü¶çüçå —á–µ—Ä–µ–∑ –≤–∫–ª–∞–¥–∫–∏) ==========
let products = value
    .replace(/[\s,;]+/g, ',')
    .split(',')
    .map(x => x.trim())
    .filter(x => /^\d{1,8}$/.test(x));

if (products.length && products.join(',') === value.replace(/[\s,;]+/g, ',')) {
    if (products.length === 1) {
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º —Å—Ä–∞–∑—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞ fixed
        window.location.href = 'https://ggsel.net/catalog/product/' + products[0] + '?exec=1';

        return;
    } else {
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –≤ –Ω–æ–≤—ã—Ö –≤–∫–ª–∞–¥–∫–∞—Ö fixed
        products.slice().reverse().forEach(productId => {
            window.open('https://ggsel.net/catalog/product/' + productId + '?exec=1', '_blank');

        });
        clearInput();
        log('–û—Ç–∫—Ä—ã—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–æ–≤: ' + products.join(', '));
        addToHistory({type:'product', value:products.join(', '), desc:'–¢–æ–≤–∞—Ä(—ã): ' + products.join(', ')});
        return;
    }
}




    if (/–±\s*–∞\s*–Ω\s*–∞\s*–Ω\s*–∞/i.test(value.replace(/\s+/g, ''))) {
        playBananaEasterEgg();
        setMsg('BANANA!!! <img src="https://www.emojiall.com/images/240/telegram/1f98d.gif" style="height:200px;margin:0 3px;vertical-align:middle;">'.repeat(9), true);
        clearInput();
        return;
    }
    if (!value) {
        log("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ –∏–ª–∏ –Ω–∏–∫ –ø—Ä–æ–¥–∞–≤—Ü–∞");
        clearInput();
        return;
    }



   // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤: –≤—Å–µ —á–∏—Å–ª–∞ —Å 9 –∏ –±–æ–ª–µ–µ —Ü–∏—Ñ—Ä–∞–º–∏
// --- –ó–∞–∫–∞–∑ ‚Äî —Ç–æ–ª—å–∫–æ 9 —Ü–∏—Ñ—Ä –ø–æ–¥—Ä—è–¥, –µ—Å–ª–∏ –ù–ï–¢ –ë–£–ö–í –≤ –ø–æ–ª–µ ---
if (!/[a-zA-Z–∞-—è–ê-–Ø—ë–Å]/.test(value)) {
    let orderMatches = value.match(/\d{9}/g);
    if (orderMatches && orderMatches.length) {
        log('–ù–∞–π–¥–µ–Ω—ã –∑–∞–∫–∞–∑—ã: ' + orderMatches.join(', '));
        addToHistory({type:'orders', value: orderMatches.join(', '), desc: '–ó–∞–∫–∞–∑—ã: ' + orderMatches.join(', ')});
        goToOrders(orderMatches);
        clearInput();
        return;
    }
}

    if (isEmail(value)) {
        log('–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–∫—É–ø–∞—Ç–µ–ª—é –ø–æ email‚Ä¶');
        addToHistory({type:'email', value:value, desc:'–ü–æ–∫—É–ø–∞—Ç–µ–ª—å: ' + value});
        window.location.href = `https://my.digiseller.ru/asp/goods_of_buyer.asp?Email=${encodeURIComponent(value)}`;
        clearInput();
        return;
    }
    if (isIPv4(value)) {
        log('–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–∫—É–ø–∞—Ç–µ–ª—é –ø–æ IP‚Ä¶');
        addToHistory({type:'ip', value: value, desc: 'IP ' + value});
        window.location.href = `https://my.digiseller.ru/asp/goods_of_buyer.asp?IP=${encodeURIComponent(value)}`;
        clearInput();
        return;
    }
// === –ù–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ —á–µ—Ä–µ–∑ –ª—é–±—ã–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ (banana split) ===
if (
    (/[,\n\r;\t]/.test(value)) && /[a-zA-Z–∞-—è–ê-–Ø—ë–Å]/.test(value)
) {
    let rawNicks = splitNicksBanana(value);
    let cache = sellerCache();

   // –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ—Ö –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ –≤ –û–î–ù–û–ú –ø–æ—Ä—è–¥–∫–µ (–∏ –∏–∑ –∫–µ—à–∞, –∏ –Ω–µ –∏–∑ –∫–µ—à–∞)
rawNicks.slice().reverse().forEach(nick => {
    let sellerId = cache.get(nick);
    if (sellerId) {
        window.open(`https://my.digiseller.ru/asp/seller_messages.asp?id_s=${sellerId}`, '_blank');
        addToHistory({ type: 'seller', value: nick, sellerId, desc: `–ü—Ä–æ–¥–∞–≤–µ—Ü ${nick}` });
    } else {
        addToHistory({ type: 'nick', value: nick, desc: `–ü—Ä–æ–¥–∞–≤–µ—Ü ${nick}` });
        let win = window.open(`https://my.digiseller.ru/asp/search.asp?txt_NameSeller=${encodeURIComponent(nick)}`, '_blank');
        if (win) {
            win.name = STORAGE_KEY + '_pending_seller=' + nick;
        }
    }
});

    clearInput();
    return;
}



let ggselProductMatch = value.match(/^https:\/\/ggsel\.net\/(en\/)?catalog\/product\/(\d+)/i);
if (ggselProductMatch) {
    let prodId = ggselProductMatch[2];
    // –ë–∞–Ω–∞–Ω–æ–≤—ã–π exec-–ø–∞—Ç—á
    let url = value;
    if (!/[?&]exec=1($|&)/.test(url)) {
        url += (url.includes('?') ? '&' : '?') + 'exec=1';
    }
    log('–ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Ç–æ–≤–∞—Ä, —á—Ç–æ–±—ã –≤—ã—Ç–∞—â–∏—Ç—å seller id...');
    addToHistory({type:'ggsel', value: value, desc:`GGSEL —Ç–æ–≤–∞—Ä #${prodId}`});
    window.location.href = url;
    clearInput();
    return;
}


    let cache = sellerCache();
    let sellerId = cache.get(value);
    if (sellerId) {
        log(`–ù–∞–π–¥–µ–Ω –≤ –∫–µ—à–µ! –°—Ä–∞–∑—É –∫ —Å–æ–æ–±—â–µ–Ω–∏—è–º!`);
        addToHistory({type:'seller', value:value, sellerId, desc:`–ü—Ä–æ–¥–∞–≤–µ—Ü ${value}`});
        localStorage.removeItem(STORAGE_KEY+'_pending_seller');
        localStorage.removeItem(STORAGE_KEY+'_msg');
        setTimeout(function() {
            window.location.href = `https://my.digiseller.ru/asp/seller_messages.asp?id_s=${sellerId}`;
        }, 250);
        clearInput();
        return;
    }

    if (/[a-zA-Z–∞-—è–ê-–Ø—ë–Å]/.test(value)) {
        let pageSellerId = tryExtractSellerIdFromPage(value);
        if (pageSellerId) {
            log(`–ù–∞—à–ª–∏ ID –ø—Ä–æ–¥–∞–≤—Ü–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: ${pageSellerId} ‚Äî –∫–µ—à–∏—Ä—É–µ–º –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º!`);
            addToHistory({type:'seller', value:value, sellerId:pageSellerId, desc:`–ü—Ä–æ–¥–∞–≤–µ—Ü ${value}`});
            sellerCache().set(value, pageSellerId);
            setTimeout(function() {
                window.location.href = `https://my.digiseller.ru/asp/seller_messages.asp?id_s=${pageSellerId}`;
            }, 300);
            clearInput();
            return;
        }
        log("–ò—â–µ–º –ø—Ä–æ–¥–∞–≤—Ü–∞‚Ä¶");
        addToHistory({type:'nick', value:value, desc:`–ü—Ä–æ–¥–∞–≤–µ—Ü ${value}`});
        localStorage.setItem(STORAGE_KEY+'_pending_seller', value);
        localStorage.removeItem(STORAGE_KEY+'_msg');
        window.location.href = `https://my.digiseller.ru/asp/search.asp?txt_NameSeller=${encodeURIComponent(value)}`;
        clearInput();
        return;
    }
    let pageSellerId = tryExtractSellerIdFromPage(value);
    if (pageSellerId) {
        log(`–ù–∞—à–ª–∏ ID –ø—Ä–æ–¥–∞–≤—Ü–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: ${pageSellerId} ‚Äî –∫–µ—à–∏—Ä—É–µ–º –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º!`);
        addToHistory({type:'seller', value:value, sellerId:pageSellerId, desc:`–ü—Ä–æ–¥–∞–≤–µ—Ü ${value}`});
        sellerCache().set(value, pageSellerId);
        setTimeout(function() {
            window.location.href = `https://my.digiseller.ru/asp/seller_messages.asp?id_s=${pageSellerId}`;
        }, 300);
        clearInput();
        return;
    }
    log("–ò—â–µ–º –ø—Ä–æ–¥–∞–≤—Ü–∞‚Ä¶");
    addToHistory({type:'nick', value:value, desc:`–ü—Ä–æ–¥–∞–≤–µ—Ü ${value}`});
    localStorage.setItem(STORAGE_KEY+'_pending_seller', value);
    localStorage.removeItem(STORAGE_KEY+'_msg');
    window.location.href = `https://my.digiseller.ru/asp/search.asp?txt_NameSeller=${encodeURIComponent(value)}`;
    clearInput();
}

function showSellerChoose(nicks, ids, query) {
    const wrap = document.getElementById('vibe-seller-choose-wrap');
    if (!wrap) return;
    wrap.innerHTML = '';
    wrap.style.display = '';
    let msgHtml = `<div style="color:#ffe37e;font-size:15px;font-weight:bold;margin-bottom:5px;">–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥–∞–≤—Ü–∞:</div>`;
    let grid = nicks.length > 10;
    let listClass = grid ? 'vibe-seller-grid' : 'vibe-seller-list';
    msgHtml += `<div id="vibe-seller-choose-list" class="${listClass}">` +
        nicks.map((nick, i) => `<button class="vibe-seller-link" data-i="${i}" tabindex="0">${nick}</button>`).join('') +
        `</div>`;
    if (query && nicks.length) {
        msgHtml += `<div style="margin-top:10px;color:#f6aeae;font-size:13px;">–ù–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ —Å–æ–≤–ø–∞–ª–∏ —Å "${query}".</div>`;
    }
    wrap.innerHTML = msgHtml;
    let histSection = document.getElementById('vibe-history-section');
    if (histSection) histSection.style.display = 'none';
    let firstBtn = wrap.querySelector('.vibe-seller-link');
    if (firstBtn) setTimeout(() => firstBtn.focus(), 90);
    wrap.querySelectorAll('.vibe-seller-link').forEach(btn => {
        btn.onclick = () => {
            let i = +btn.dataset.i;
            let sellerNick = nicks[i], sellerId = ids[i];
            window.location.href = `https://my.digiseller.ru/asp/seller_messages.asp?id_s=${sellerId}`;
        };
    });
}

function checkAndJumpToSellerMsg() {
    let pendingSeller = null;
// –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –≤–∑—è—Ç—å –∏–∑ window.name (–µ—Å–ª–∏ –µ—Å—Ç—å)
if (window.name && window.name.startsWith(STORAGE_KEY + '_pending_seller=')) {
    pendingSeller = window.name.substring((STORAGE_KEY + '_pending_seller=').length);
} else {
    pendingSeller = localStorage.getItem(STORAGE_KEY+'_pending_seller');
}
if (!pendingSeller) return;
    let spans = Array.from(document.querySelectorAll('span[style*="line-height"] > a.targettree[href*="seller_info.asp?id_s="]'));
    let sellerBlocks = [];
    spans.forEach(a => {
        let span = a.parentElement;
        if (span && span.tagName === "SPAN") {
            let txt = span.childNodes[0] && span.childNodes[0].nodeValue;
            let nick = txt && txt.replace(/\xa0$/,'').trim();
            let href = a.getAttribute('href');
            let m = href && href.match(/id_s=(\d+)/);
            if (nick && m) {
                sellerBlocks.push({nick: nick, id: m[1]});
            }
        }
    });
// === –¢–û–ß–ù–û–ï –°–û–í–ü–ê–î–ï–ù–ò–ï –ø–æ –æ–¥–Ω–æ–º—É –Ω–∏–∫—É ===
let pending = (pendingSeller || "").trim().toLowerCase();
let exact = sellerBlocks.find(block => block.nick.trim().toLowerCase() === pending);
if (exact) {
    log(`–¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ: ${exact.nick} ‚Üí ID ${exact.id}`);
    addToHistory({type:'seller', value:exact.nick, sellerId:exact.id, desc:`–ü—Ä–æ–¥–∞–≤–µ—Ü ${exact.nick}`});
    sellerCache().set(exact.nick, exact.id);
    localStorage.removeItem(STORAGE_KEY+'_pending_seller');
    localStorage.removeItem(STORAGE_KEY+'_msg');
    window.location.href = `https://my.digiseller.ru/asp/seller_messages.asp?id_s=${exact.id}`;
    return;
}

// === –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤ pendingSeller –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–∏–∫–æ–≤ ===
if (pendingSeller.includes(',')) {
    const pendingList = pendingSeller.split(',').map(s => s.trim());
    // –î–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–∏–∫–∞ –∏—â–µ–º —Ç–æ–ª—å–∫–æ –ü–û–õ–ù–û–ï —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
    let matched = [];
    pendingList.forEach(pendingNick => {
        let exact = sellerBlocks.find(block => block.nick.trim().toLowerCase() === pendingNick.trim().toLowerCase());
        if (exact) {
            matched.push(exact);
        }
    });
    if (matched.length > 0) {
        matched.forEach(block => {
            log(`–¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ: ${block.nick} ‚Üí ID ${block.id}`);
            addToHistory({type:'seller', value:block.nick, sellerId:block.id, desc:`–ü—Ä–æ–¥–∞–≤–µ—Ü ${block.nick}`});
            sellerCache().set(block.nick, block.id);
            window.open(`https://my.digiseller.ru/asp/seller_messages.asp?id_s=${block.id}`, '_blank');
        });
        localStorage.removeItem(STORAGE_KEY+'_pending_seller');
        localStorage.removeItem(STORAGE_KEY+'_msg');
        return;
    }
}



    if (sellerBlocks.length === 1) {
        let sellerId = sellerBlocks[0].id;
        log(`–ù–∞—à–ª–∏ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ–≥–æ –ø—Ä–æ–¥–∞–≤—Ü–∞ (${sellerBlocks[0].nick}), –∫–µ—à–∏—Ä—É–µ–º!`);
        addToHistory({type:'seller', value:pendingSeller, sellerId, desc:`–ü—Ä–æ–¥–∞–≤–µ—Ü ${sellerBlocks[0].nick}`});
        sellerCache().set(sellerBlocks[0].nick, sellerId);
        localStorage.setItem(STORAGE_KEY+'_seller_id', sellerId);
        localStorage.removeItem(STORAGE_KEY+'_pending_seller');
        localStorage.removeItem(STORAGE_KEY+'_msg');
        setTimeout(function() {
            window.location.href = `https://my.digiseller.ru/asp/seller_messages.asp?id_s=${sellerId}`;
        }, 400);
        return;
    }
    if (sellerBlocks.length > 1) {
        showSellerChoose(sellerBlocks.map(b=>b.nick), sellerBlocks.map(b=>b.id), pendingSeller);
        return;
    }
    let input = document.querySelector('input[name="ID_S"]');
    if (input && input.value && /^\d+$/.test(input.value)) {
        log(`–ù–∞—à–ª–∏ ID –ø—Ä–æ–¥–∞–≤—Ü–∞: ${input.value} ‚Äî –∫–µ—à–∏—Ä—É–µ–º –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è...`);
        addToHistory({type:'seller', value:pendingSeller, sellerId:input.value, desc:`–ü—Ä–æ–¥–∞–≤–µ—Ü ${pendingSeller}`});
sellerCache().set(pendingSeller, input.value);
localStorage.setItem(STORAGE_KEY+'_seller_id', input.value);
localStorage.removeItem(STORAGE_KEY+'_pending_seller');
localStorage.removeItem(STORAGE_KEY+'_msg');
setTimeout(function() {
    window.location.href = `https://my.digiseller.ru/asp/seller_messages.asp?id_s=${input.value}`;
}, 350);

    }
}

restorePanelState();
checkAndJumpToSellerMsg();
// –ë–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –∫–æ–≥–¥–∞ –º—ã—à–∫–∞ –Ω–∞–¥ –∏—Å—Ç–æ—Ä–∏–µ–π (—Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ –±–ª–æ–∫–∞)
document.addEventListener('DOMContentLoaded', function() {
    const hist = document.getElementById('vibe-history-list');
    if (!hist) return;
    hist.addEventListener('wheel', function(e) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º: –º–æ–∂–Ω–æ –ª–∏ –ø—Ä–æ–∫—Ä—É—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é?
        const scrollTop = hist.scrollTop;
        const scrollHeight = hist.scrollHeight;
        const clientHeight = hist.clientHeight;
        const delta = e.deltaY;
        const atTop = scrollTop === 0 && delta < 0;
        const atBottom = scrollTop + clientHeight >= scrollHeight && delta > 0;

        // –ï—Å–ª–∏ –µ—Å—Ç—å –∫—É–¥–∞ —Å–∫—Ä–æ–ª–ª–∏—Ç—å ‚Äî –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∏—Å—Ç–æ—Ä–∏—é
        // –ï—Å–ª–∏ –Ω–µ–∫—É–¥–∞ ‚Äî –±–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
        if (
            (delta < 0 && !atTop) ||
            (delta > 0 && !atBottom) ||
            atTop || atBottom
        ) {
            e.stopPropagation();
            e.preventDefault();
        }
    }, { passive: false });
});
    // === Banana product extraction ü¶çüçå –¥–ª—è ggsel.net ===
   if (window.location.hostname.includes('ggsel.net')) {
    const url = new URL(window.location.href);
    const bananaKey = url.searchParams.get('banana_key');
    if (url.searchParams.get('banana_product') === '1' && bananaKey && /^\d+$/.test(url.pathname.split('/').pop())) {
        setTimeout(() => {
            let link = document.querySelector('a.ProductSidebar_name__ElTmj[href*="/sellers/"]');
            let m = link && link.getAttribute('href').match(/\/sellers\/(\d+)/);
            if (m && m[1]) {
                localStorage.setItem(bananaKey, m[1]);
                // –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–µ—Ä–µ–ø–∏—Å–∫—É —Å –ø—Ä–æ–¥–∞–≤—Ü–æ–º (–∫–∞–∫ –¥–ª—è "—Å—Å—ã–ª–∫–∞"):
                window.open('https://my.digiseller.ru/asp/seller_messages.asp?id_s=' + m[1], '_blank');
                // –ú–æ–∂–Ω–æ –Ω–µ –∑–∞–∫—Ä—ã–≤–∞—Ç—å —Ç–∞–±, –µ—Å–ª–∏ –Ω–∞–¥–æ –æ—Ç–ª–∞–∂–∏–≤–∞—Ç—å. –ò–Ω–∞—á–µ –æ—Å—Ç–∞–≤—å window.close();
                window.close();
            } else {
                localStorage.setItem(bananaKey, 'not_found');
                window.close();
            }
        }, 1600);
    }
}


})();
