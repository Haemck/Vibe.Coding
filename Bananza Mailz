// ==UserScript==
// @name         Digiseler: Bananza Mailz
// @namespace    http://tampermonkey.net/
// @version      5.0
// @description  Bananza Mailz ‚Äî –∞–≤—Ç–æ—Ä–∞—Å—Å—ã–ª–∫–∞, –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ—Å–ª–µ F5 + –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–æ–±–ª–µ–º resume. –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ª—É—á–∞–π–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ —á–µ—Ä–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ.
// @author       vibe.coding
// @match        https://my.digiseller.ru/*
// @grant        GM_xmlhttpRequest
// @updateURL    https://raw.githubusercontent.com/Haemck/Vibe.Coding/refs/heads/main/Bananza%20Mailz
// @downloadURL  https://raw.githubusercontent.com/Haemck/Vibe.Coding/refs/heads/main/Bananza%20Mailz
// ==/UserScript==

(function() {
    'use strict';

    // --- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ ---
    function bananzaDebugLog(...args) {
        // –ú–æ–∂–Ω–æ –ª–µ–≥–∫–æ —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –ø–æ [BananzaMailz]
        console.log('[BananzaMailz]', ...args);
    }

    // --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
    const APPS_SCRIPT_API_URL = 'https://script.google.com/macros/s/AKfycbzKBKQ7OkXV_nEpdvP4y5QZj6lHFQg2p8oNE_gwCU_B3MPFjyqWDbQPNXq7OeaP74Ya/exec';
    const BANANZA_STATE = 'bananza_mailz_open';
    const BANANZA_STORE = 'bananza_mailz_data';
    const BANANZA_TTL_MS = 1000 * 60 * 30;
    const BANANZA_SEND_DELAY_MS = 200;

    let sellers = [], message = '', logs = [], errors = [];
    let isSending = false, monkeProgress = 0, cancel = false, pausedAt = 0;
    let lastUpdate = 0;
    let bananzaPanel = null;
    let monkeBtn = null;

    // --- –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ localStorage ---
    function saveBananzaStore() {
        bananzaDebugLog('saveBananzaStore()', { sellers, isSending, monkeProgress, pausedAt });
        const store = { sellers, message, logs, errors, isSending, monkeProgress, cancel, pausedAt, lastUpdate: Date.now() };
        localStorage.setItem(BANANZA_STORE, JSON.stringify(store));
    }
    // --- –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑ localStorage ---
    function loadBananzaStore() {
        bananzaDebugLog('loadBananzaStore()');
        let store = null;
        try { store = JSON.parse(localStorage.getItem(BANANZA_STORE) || ''); } catch {}
        bananzaDebugLog('store loaded:', store);
        if (store && typeof store === 'object' && store.sellers && Array.isArray(store.sellers)) {
            sellers = store.sellers || [];
            message = store.message || '';
            logs = store.logs || [];
            errors = store.errors || [];
            isSending = !!store.isSending;
            monkeProgress = store.monkeProgress || 0;
            cancel = false;
            pausedAt = store.pausedAt || 0;
            lastUpdate = store.lastUpdate || 0;

            // --- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –µ—Å–ª–∏ —Ä–∞—Å—Å—ã–ª–∫–∞ –±—ã–ª–∞ –æ–±–æ—Ä–≤–∞–Ω–∞ F5 (isSending==true, pausedAt==0, –Ω–æ monkeProgress > 0) ---
            if (isSending && pausedAt === 0 && monkeProgress > 0 && monkeProgress < sellers.length) {
                bananzaDebugLog('Detected interrupted mailing (F5), auto-pausing at:', monkeProgress);
                isSending = false;
                pausedAt = monkeProgress;
            }
            // –ï—Å–ª–∏ —Ä–∞—Å—Å—ã–ª–∫–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–∫–æ–Ω—á–µ–Ω–∞ (monkeProgress === sellers.length) ‚Äî —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            if (monkeProgress >= sellers.length) {
                isSending = false;
                pausedAt = 0;
            }
            bananzaDebugLog('restored vars:', { sellers, isSending, monkeProgress, pausedAt });
        }
    }
    // --- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–µ–∂–µ—Å—Ç–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è ---
    function stateIsFresh() {
        return !!sellers.length && (Date.now() - lastUpdate < BANANZA_TTL_MS);
    }

    // --- –ö–Ω–æ–ø–∫–∞-–æ–±–µ–∑—å—è–Ω–∞ ---
    function createMonkeyBtn() {
        bananzaDebugLog('createMonkeyBtn()');
        if (document.getElementById('bananza-monke-btn')) return;
        monkeBtn = document.createElement('div');
        monkeBtn.id = 'bananza-monke-btn';
        monkeBtn.title = '–û—Ç–∫—Ä—ã—Ç—å/–°–∫—Ä—ã—Ç—å Bananza Mailz';
        monkeBtn.innerHTML = 'üêí';
        monkeBtn.className = 'bananza-fab bananza-fab-show';
        monkeBtn.onclick = function() {
            bananzaDebugLog('monkeBtn clicked');
            hideMonkeyBtn(() => showBananzaPanel());
        };
        document.body.appendChild(monkeBtn);
    }
    function hideMonkeyBtn(cb) {
        bananzaDebugLog('hideMonkeyBtn()');
        if (!monkeBtn) return;
        monkeBtn.classList.remove('bananza-fab-show');
        monkeBtn.classList.add('bananza-fab-hide');
        setTimeout(() => {
            monkeBtn.style.display = 'none';
            monkeBtn.style.opacity = '0';
            if (cb) cb();
        }, 270);
    }
    function showMonkeyBtn() {
        bananzaDebugLog('showMonkeyBtn()');
        if (!monkeBtn) createMonkeyBtn();
        monkeBtn.style.display = '';
        monkeBtn.style.opacity = '';
        setTimeout(() => {
            monkeBtn.classList.remove('bananza-fab-hide');
            monkeBtn.classList.add('bananza-fab-show');
        }, 10);
    }

    // --- –ü–∞–Ω–µ–ª—å —Ä–∞—Å—Å—ã–ª–∫–∏ ---
    function showBananzaPanel(forceReload) {
        bananzaDebugLog('showBananzaPanel()', { forceReload, bananzaPanelExists: !!bananzaPanel });
        if (bananzaPanel && document.body.contains(bananzaPanel)) {
            renderBananzaPanel();
            return;
        }
        bananzaPanel = document.createElement('div');
        bananzaPanel.id = 'bananza-mailz-popup';
        bananzaPanel.className = 'bananza-panel bananza-panel-show';
        bananzaPanel.innerHTML = `
            <div class="bananza-head">
                <span style="font-size: 26px; vertical-align: -3px;">üçå</span>
                <span class="bananza-title">Bananza Mailz</span>
                <button id="bananza-mailz-reload" title="–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫" class="bananza-action-btn">‚ü≥</button>
                <button id="bananza-mailz-close" title="–°–≤–µ—Ä–Ω—É—Ç—å –æ–∫–Ω–æ" class="bananza-mailz-close" style="margin-left:auto;">‚úñ</button>
            </div>
            <div class="bananza-info">
                <b>–ü—Ä–æ–¥–∞–≤—Ü–æ–≤:</b> <span style="color:#f7c926" id="bananza-count">‚Ä¶</span>
            </div>
            <div id="bananza-go-msg" class="bananza-msg">‚Ä¶</div>
            <div class="bananza-actions">
                <button id="bananza-go-start-btn" class="ds-bananza-glow-btn ds-green">–ë–ê–ù–ê–ù–´ –í–°–ï–ú!</button>
                <button id="bananza-go-cancel-btn" style="margin-left:12px;display:none;" class="ds-bananza-glow-btn ds-grey">‚è∏ –ü–∞—É–∑–∞</button>
            </div>
            <div id="bananza-go-progress" class="bananza-progress"></div>
            <div id="bananza-go-log" class="bananza-log"></div>
        `;
        document.body.appendChild(bananzaPanel);

        setTimeout(()=>{ enableVibeScroll('bananza-go-msg'); enableVibeScroll('bananza-go-log'); },80);
        positionBananzaPanel();
        window.addEventListener('resize', positionBananzaPanel);

        document.getElementById('bananza-mailz-close').onclick = function() {
            bananzaDebugLog('bananza-mailz-close clicked');
            hideBananzaPanel();
        };
        document.getElementById('bananza-mailz-reload').onclick = function() {
            bananzaDebugLog('bananza-mailz-reload clicked');
            loadBananzaData(true);
        };

        // --- –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏ ---
        document.getElementById('bananza-go-start-btn').onclick = ()=>{
            bananzaDebugLog('Start button clicked', { isSending, pausedAt });
            if (!isSending) {
                // --- –í–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è ---
                window._bananzaNeedConfirm = true;
                renderBananzaPanel();
            }
        };
        document.getElementById('bananza-go-cancel-btn').onclick = ()=>{
            bananzaDebugLog('Cancel button clicked');
            cancel = true;
        };

        renderBananzaPanel();
        localStorage.setItem(BANANZA_STATE, '1');
        if (forceReload || !stateIsFresh()) loadBananzaData();
    }
    function hideBananzaPanel() {
        bananzaDebugLog('hideBananzaPanel()');
        if (bananzaPanel && document.body.contains(bananzaPanel)) {
            bananzaPanel.classList.remove('bananza-panel-show');
            bananzaPanel.classList.add('bananza-panel-hide');
            setTimeout(() => {
                if (bananzaPanel.parentNode) bananzaPanel.parentNode.removeChild(bananzaPanel);
                bananzaPanel = null;
                showMonkeyBtn();
            }, 320);
        } else {
            showMonkeyBtn();
        }
        localStorage.setItem(BANANZA_STATE, '0');
        window.removeEventListener('resize', positionBananzaPanel);
    }
    function positionBananzaPanel() {
        if (!bananzaPanel) return;
        bananzaPanel.style.position = 'fixed';
        bananzaPanel.style.right = '134px';
        bananzaPanel.style.bottom = '15px';
        bananzaPanel.style.zIndex = '1000999';
    }

    // --- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –ø–∞–Ω–µ–ª–∏ ---
    function renderBananzaPanel() {
        bananzaDebugLog('renderBananzaPanel()', { sellersLength: sellers.length, isSending, pausedAt });
        if (!bananzaPanel) { bananzaDebugLog('No bananzaPanel'); return; }
        document.getElementById('bananza-count').textContent = sellers.length;
        let msgEl = document.getElementById('bananza-go-msg');
        if (msgEl) msgEl.textContent = message || '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ!';
        let startBtn = document.getElementById('bananza-go-start-btn');
        let cancelBtn = document.getElementById('bananza-go-cancel-btn');

        // --- –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ª—É—á–∞–π–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ ---
        let confirmDiv = document.getElementById('bananza-go-confirm-wrap');
        if (confirmDiv) confirmDiv.remove(); // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
        if (window._bananzaNeedConfirm) {
            // –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            confirmDiv = document.createElement('div');
            confirmDiv.id = 'bananza-go-confirm-wrap';
            confirmDiv.style.display = 'flex';
            confirmDiv.style.gap = '12px';
            confirmDiv.style.marginBottom = '7px';
            // –ö–Ω–æ–ø–∫–∞ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å
            let confirmBtn = document.createElement('button');
            confirmBtn.className = 'ds-bananza-glow-btn ds-yellow'; // —Ç–µ–ø–µ—Ä—å –∂—ë–ª—Ç–∞—è
            confirmBtn.textContent = '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å';
            confirmBtn.onclick = function() {
                window._bananzaNeedConfirm = false;
                renderBananzaPanel();
                bananzaDebugLog('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏');
                startBananzaSend(pausedAt > 0 ? pausedAt : 0);
            };
            // –ö–Ω–æ–ø–∫–∞ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
            let reloadBtn = document.createElement('button');
            reloadBtn.className = 'ds-bananza-glow-btn ds-grey';
            reloadBtn.textContent = '–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ';
            reloadBtn.onclick = function() {
                window._bananzaNeedConfirm = false;
                renderBananzaPanel();
                loadBananzaData(true);
            };
            confirmDiv.appendChild(confirmBtn);
            confirmDiv.appendChild(reloadBtn);
            // –í—Å—Ç–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–¥ –ª–æ–≥–æ–º
            let actions = document.querySelector('.bananza-actions');
            if (actions) actions.parentNode.insertBefore(confirmDiv, actions.nextSibling);
            // –°–∫—Ä—ã–≤–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
            startBtn.style.display = 'none';
            cancelBtn.style.display = 'none';
        } else {
            // –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
            startBtn.style.display = '';
            if (pausedAt > 0 && !isSending) {
                startBtn.disabled = false;
                startBtn.textContent = '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É';
            } else if (isSending) {
                startBtn.disabled = true;
                startBtn.textContent = '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É';
            } else {
                startBtn.disabled = !sellers.length;
                startBtn.textContent = '–ë–ê–ù–ê–ù–´ –í–°–ï–ú!';
            }
            cancelBtn.style.display = isSending ? '' : 'none';
        }
        // --- –ü—Ä–æ–≥—Ä–µ—Å—Å –∏ –ª–æ–≥ ---
        let prog = '';
        if (isSending || pausedAt > 0) {
            let done = Math.max(pausedAt, monkeProgress, 0);
            prog = `–†–∞—Å—Å—ã–ª–∫–∞: ${done}/${sellers.length}`;
            if (errors.length) prog += ` <span style="color:#ff8585;">–û—à–∏–±–æ–∫: ${errors.length}</span>`;
            if (pausedAt > 0 && !isSending) prog += ` <span style="color:#ffe37e;font-size:13px;">[–ü–∞—É–∑–∞]</span>`;
        }
        document.getElementById('bananza-go-progress').innerHTML = prog;
        document.getElementById('bananza-go-log').innerHTML = logs.map(e=>e).join('') || `<span style="color:#777">–õ–æ–≥ –ø—É—Å—Ç</span>`;
        saveBananzaStore();
    }

    // --- –õ–æ–≥–∏–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö ---
    function logBananza(msg, error = false) {
        bananzaDebugLog('logBananza:', msg, error);
        logs.push(`<div style="color:${error ? '#f98b8b' : '#e1f8a7'};">${msg}</div>`);
        renderBananzaPanel();
        let logDiv = document.getElementById('bananza-go-log');
        if (logDiv) logDiv.scrollTop = logDiv.scrollHeight;
    }
    function loadBananzaData(forceReload) {
        bananzaDebugLog('loadBananzaData()', { forceReload });
        if (!bananzaPanel) return;
        document.getElementById('bananza-count').textContent = '‚Ä¶';
        document.getElementById('bananza-go-msg').textContent = '–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...';
        fetch(APPS_SCRIPT_API_URL + '?action=get_data').then(r=>r.json()).then(data=>{
            sellers = Array.isArray(data.sellers) ? data.sellers : [];
            message = (data.message || '').trim();
            logs = [];
            errors = [];
            monkeProgress = 0;
            cancel = false;
            pausedAt = 0;
            isSending = false;
            lastUpdate = Date.now();
            bananzaDebugLog('Data loaded from API', { sellers, message });
            renderBananzaPanel();
            saveBananzaStore();
        }).catch(e=>{
            document.getElementById('bananza-go-msg').textContent = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö!';
            logBananza(String(e), true);
        });
    }

    // --- –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏ ---
    async function startBananzaSend(startIdx = 0) {
        bananzaDebugLog('startBananzaSend() called', { startIdx, isSending, pausedAt });
        isSending = true;
        cancel = false;
        renderBananzaPanel();
        logBananza(`üçå –ó–∞–ø—É—Å–∫ —Ä–∞—Å—Å—ã–ª–∫–∏ —Å –ø–æ–∑–∏—Ü–∏–∏ ${startIdx+1} –∏–∑ ${sellers.length}...`);

        // --- –†–µ–≤–∏–∑–∏—è –¥–≤—É—Ö –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –ø–µ—Ä–µ–¥ startIdx ---
        let checkFrom = Math.max(0, startIdx - 2);
        for (let j = checkFrom; j < startIdx; ++j) {
            const id = String(sellers[j].id || sellers[j]);
            let uniqueMsg = (sellers[j].message || '').trim();
            let globalMsg = (message || '').trim();
            let toSend = uniqueMsg ? uniqueMsg : globalMsg;
            if (!toSend) {
                logBananza(`[${j+1}] ID ${id}: –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –ø—Ä–æ–ø—É—â–µ–Ω–æ (—Ä–µ–≤–∏–∑–∏—è)`, true);
                continue;
            }
            logBananza(`[${j+1}] ID ${id}: —Ä–µ–≤–∏–∑–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...`);
            try {
                let lastMsg = await getLastSellerMsg(id);
                let normLast = (lastMsg||'').trim().replace(/\s+/g,' ');
                let normSent = (toSend||'').trim().replace(/\s+/g,' ');
                if (normLast === normSent) {
                    logBananza(`[${j+1}] ID ${id}: —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (—Ä–µ–≤–∏–∑–∏—è)`, false);
                    await sendLogToSheet(id, '–£–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (—Ä–µ–≤–∏–∑–∏—è)', `https://my.digiseller.ru/asp/seller_messages.asp?id_s=${id}`);
                } else {
                    logBananza(`[${j+1}] ID ${id}: –æ—Ç–ø—Ä–∞–≤–ª—è—é –ø–æ–≤—Ç–æ—Ä–Ω–æ (—Ä–µ–≤–∏–∑–∏—è)...`);
                    await sendMsgToSeller(id, toSend, j+1);
                }
            } catch(e) {
                logBananza(`[${j+1}] ID ${id}: –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≤–∏–∑–∏–∏: ${e.message||e}`, true);
                errors.push(id);
                await sendLogToSheet(id, '–û—à–∏–±–∫–∞ —Ä–µ–≤–∏–∑–∏–∏: ' + (e.message||e));
            }
            monkeProgress = j+1;
            pausedAt = 0;
            renderBananzaPanel();
            saveBananzaStore();
            if (j < startIdx-1) await sleep(BANANZA_SEND_DELAY_MS);
        }

        for (let i = startIdx; i < sellers.length; ++i) {
            if (cancel) {
                pausedAt = i;
                isSending = false;
                logBananza(`<b>–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –Ω–∞ –ø–∞—É–∑—É. –ú–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç.</b>`, true);
                renderBananzaPanel();
                saveBananzaStore();
                return;
            }
            const id = String(sellers[i].id || sellers[i]);
            let uniqueMsg = (sellers[i].message || '').trim();
            let globalMsg = (message || '').trim();
            let toSend = uniqueMsg ? uniqueMsg : globalMsg;
            if (!toSend) {
                logBananza(`[${i+1}] ID ${id}: –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –ø—Ä–æ–ø—É—â–µ–Ω–æ`, true);
                continue;
            }
            logBananza(`[${i+1}] ID ${id}: –ø—Ä–æ–≤–µ—Ä—è—é –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...`);
            try {
                let lastMsg = await getLastSellerMsg(id);
                let normLast = (lastMsg||'').trim().replace(/\s+/g,' ');
                let normSent = (toSend||'').trim().replace(/\s+/g,' ');
                if (normLast === normSent) {
                    logBananza(`[${i+1}] ID ${id}: —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º!`);
                    await sendLogToSheet(id, '–£–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ', `https://my.digiseller.ru/asp/seller_messages.asp?id_s=${id}`);
                } else {
                    logBananza(`[${i+1}] ID ${id}: –æ—Ç–ø—Ä–∞–≤–ª—è—é...`);
                    await sendMsgToSeller(id, toSend, i+1);
                }
            } catch(e) {
                logBananza(`[${i+1}] ID ${id}: –æ—à–∏–±–∫–∞: ${e.message||e}`, true);
                errors.push(id);
                await sendLogToSheet(id, '–û—à–∏–±–∫–∞: ' + (e.message||e));
            }
            monkeProgress = i+1;
            pausedAt = 0;
            renderBananzaPanel();
            saveBananzaStore();
            if (i < sellers.length-1) await sleep(BANANZA_SEND_DELAY_MS);
        }
        isSending = false;
        pausedAt = 0;
        renderBananzaPanel();
        let finalMsg = (errors.length === 0)
            ? '–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –≤—Å–µ –æ–±–µ–∑—å—è–Ω—ã –ø–æ–ª—É—á–∏–ª–∏ –±–∞–Ω–∞–Ω—ã üçåüêí'
            : `–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, <b>–Ω–µ –≤—Å–µ –æ–±–µ–∑—å—è–Ω—ã –ø–æ–ª—É—á–∏–ª–∏ –±–∞–Ω–∞–Ω—ã!</b> (${errors.length} –æ—à–∏–±–æ–∫)`;
        logBananza(`<div style="font-size:16px;color:${errors.length?'#ff8585':'#b6ff79'};margin-top:7px;">${finalMsg}</div>`);
        saveBananzaStore();
    }

    // --- –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ–¥–∞–≤—Ü—É ---
    function sendMsgToSeller(id, msg, idx) {
        bananzaDebugLog('sendMsgToSeller()', { id, idx, msg });
        return new Promise((resolve, reject) => {
            GM_xmlhttpRequest({
                method: "POST",
                url: `https://my.digiseller.ru/asp/new_message.asp?id_s=${id}`,
                headers: { "Content-Type": "application/x-www-form-urlencoded" },
                data: `txt_Message=${encodeURIComponent(msg)}`,
                onload: function(response) {
                    bananzaDebugLog('sendMsgToSeller response', { status: response.status, finalUrl: response.finalUrl });
                    if (response.status === 200 && !response.finalUrl.includes('login.asp')) {
                        setTimeout(() => {
                            getLastSellerMsg(id).then(lastMsg => {
                                let normLast = (lastMsg||'').trim().replace(/\s+/g,' ');
                                let normSent = (msg||'').trim().replace(/\s+/g,' ');
                                if (normLast === normSent) {
                                    logBananza(`[${idx}] ID ${id}: OK, —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ!`);
                                    sendLogToSheet(id, 'OK', `https://my.digiseller.ru/asp/seller_messages.asp?id_s=${id}`);
                                    resolve();
                                } else {
                                    logBananza(`[${idx}] ID ${id}: –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ù–ï —Å–æ–≤–ø–∞–ª–æ!`, true);
                                    sendLogToSheet(id, '–û—à–∏–±–∫–∞: –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–≤–ø–∞–ª–æ', `https://my.digiseller.ru/asp/seller_messages.asp?id_s=${id}`);
                                    reject(new Error('–ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–≤–ø–∞–ª–æ'));
                                }
                            }).catch(e=>{
                                logBananza(`[${idx}] ID ${id}: –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: ${e.message||e}`, true);
                                sendLogToSheet(id, '–û—à–∏–±–∫–∞: ' + (e.message||e), `https://my.digiseller.ru/asp/seller_messages.asp?id_s=${id}`);
                                reject(new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è'));
                            });
                        }, 800);
                    } else if (response.finalUrl && response.finalUrl.includes('login.asp')) {
                        reject(new Error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏! –ü–µ—Ä–µ–∑–∞–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç Digiseller!'));
                    } else {
                        reject(new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ö–æ–¥: ' + response.status));
                    }
                },
                onerror: function() {
                    bananzaDebugLog('sendMsgToSeller onerror');
                    reject(new Error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –∏–ª–∏ CORS'));
                }
            });
        });
    }

    // --- –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ–¥–∞–≤—Ü—É ---
    function getLastSellerMsg(id) {
        bananzaDebugLog('getLastSellerMsg()', { id });
        return new Promise((resolve, reject) => {
            GM_xmlhttpRequest({
                method: "GET",
                url: `https://my.digiseller.ru/asp/seller_messages.asp?id_s=${id}`,
                onload: function(response) {
                    bananzaDebugLog('getLastSellerMsg response', { status: response.status });
                    if (response.status === 200) {
                        let temp = document.createElement('div');
                        temp.innerHTML = response.responseText;
                        let trs = temp.querySelectorAll('table[cellpadding="2"] tr');
                        if (trs.length === 0) return reject(new Error("–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π!"));
                        let firstTr = trs[0];
                        let font = firstTr.querySelector('font[color="b2b2b2"]');
                        if (font) {
                            let msg = font.innerHTML.replace(/<br\s*\/?>/gi, "\n").replace(/<.*?>/g,"").trim();
                            resolve(msg);
                        } else {
                            reject(new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è."));
                        }
                    } else {
                        reject(new Error("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: " + response.status));
                    }
                },
                onerror: function() {
                    bananzaDebugLog('getLastSellerMsg onerror');
                    reject(new Error("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –∏–ª–∏ CORS"));
                }
            });
        });
    }

    // --- –õ–æ–≥ –≤ Google Sheet ---
    function sendLogToSheet(id, log, url) {
        bananzaDebugLog('sendLogToSheet()', { id, log, url });
        // –ï—Å–ª–∏ –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞, —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ñ–æ—Ä–º—É–ª—É HYPERLINK –¥–ª—è Google Sheets
        let logValue = log;
        if (url) {
            // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∫–∞–≤—ã—á–∫–∏ –≤ —Ç–µ–∫—Å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            let safeLog = String(log).replace(/"/g, '""');
            logValue = `=HYPERLINK("${url}";"${safeLog}")`;
        }
        fetch(APPS_SCRIPT_API_URL + `?action=set_log&id=${encodeURIComponent(id)}&log=${encodeURIComponent(logValue)}`)
        .then(r=>r.json()).catch(()=>{});
    }
    // --- –ü–∞—É–∑–∞ ---
    function sleep(ms) { return new Promise(res=>setTimeout(res,ms)); }

    // --- –ö—Ä–∞—Å–∏–≤—ã–π —Å–∫—Ä–æ–ª–ª –¥–ª—è –ª–æ–≥–æ–≤ ---
    function enableVibeScroll(id) {
        const el = typeof id === "string" ? document.getElementById(id) : id;
        if (!el) return;
        el.addEventListener('wheel', function(e) {
            const scrollTop = el.scrollTop, scrollHeight = el.scrollHeight, clientHeight = el.clientHeight, delta = e.deltaY;
            const atTop = scrollTop === 0 && delta < 0;
            const atBottom = scrollTop + clientHeight >= scrollHeight && delta > 0;
            if ((delta < 0 && !atTop) || (delta > 0 && !atBottom)) {
                el.scrollTop += delta;
                e.stopPropagation();
                e.preventDefault();
            } else if (atTop || atBottom) {
                e.stopPropagation();
                e.preventDefault();
            }
        }, { passive: false });
    }

    // --- –°—Ç–∏–ª–∏ ---
    let style = document.createElement('style');
    style.textContent = `
.bananza-fab {
    position: fixed;
    right: 100px;
    bottom: 20px;
    width: 40px; height: 40px;
    background: rgba(32,34,42,0.97);
    color: gold;
    border-radius: 50%;
    border: 2px solid gold;
    box-shadow: 0 6px 26px #0009;
    font-size: 24px;
    display: flex;
    align-items: center; justify-content: center;
    cursor: pointer;
    opacity: 1; transform: scale(1);
    z-index: 1000999;
    transition: opacity 0.25s, transform 0.23s;
}
.bananza-mailz-close{
    position: absolute; top: 14px; right: 14px; width: 36px; height: 36px; display: flex; align-items: center; justify-content: center;
    background: rgba(38,38,42,0.87); border-radius: 25%; border: 2px solid gold; color: gold;
    font-size: 22px; font-weight: bold; cursor: pointer; opacity: 0.88; z-index:10; transition: background .15s, opacity .15s, box-shadow .15s;
    box-shadow: 0 3px 14px #0005;
}
#bananza-mailz-close:hover { opacity: 1; background: #2c2f38; box-shadow: 0 6px 26px #0008;}
.bananza-fab-show {
    opacity: 1;
    pointer-events: auto;
    transform: scale(1);
    transition: opacity 0.27s, transform 0.19s;
}
.bananza-fab-hide {
    opacity: 0;
    pointer-events: none;
    transform: scale(0.78) translateY(24px);
    transition: opacity 0.23s, transform 0.18s;
}
.bananza-fab:hover { filter: brightness(1.15);}
.bananza-panel {
    position: fixed;
    right: 34px;
    bottom: 30px;
    z-index: 1000999;
    min-width: 360px;
    max-width: 480px;
    max-height: 640px;
    background: rgba(28,32,44,0.98);
    color: #ffe37e;
    border-radius: 19px;
    font-size: 17px;
    box-shadow: 0 10px 38px #000b,0 1.5px 4px #000a;
    border: 2px solid gold;
    padding: 22px 23px 16px 17px;
    margin-bottom: 18px;
    box-sizing: border-box;
    animation: vibeGrowIn .23s;
    display: flex;
    flex-direction: column;
    min-height: 220px;
    opacity: 1;
    transform: scale(1);
    transition: opacity 0.32s, transform 0.22s;
}
.bananza-panel-show {
    opacity: 1;
    transform: scale(1);
    pointer-events: auto;
    transition: opacity 0.32s, transform 0.22s;
}
.bananza-panel-hide {
    opacity: 0;
    transform: scale(0.96) translateY(32px);
    pointer-events: none;
    transition: opacity 0.22s, transform 0.16s;
}
.bananza-head {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-bottom: 12px;
    font-size: 20px;
    font-weight: bold;
    color: gold;
}
.bananza-title { color: gold; font-size: 19px; font-weight: bold; margin-left: 4px;}
.bananza-action-btn {
    background: none;
    border: none;
    color: gold;
    font-size: 17px;
    cursor: pointer;
    border-radius: 8px;
    transition: background .13s;
    padding: 2px 7px;
    margin-left: 7px;
}
.bananza-action-btn:hover { background:#24262d; }
.bananza-info { margin-bottom: 6px; font-size: 16.5px;}
.bananza-msg {
    background: #292e39;
    padding: 10px 12px;
    border-radius: 8px;
    margin: 4px 0 10px 0;
    font-size: 16px;
    color: #ffe37e;
    max-height: 85px;
    overflow: auto;
    width: 100%;
    word-break: break-word;
    overflow-wrap: break-word;
    white-space: pre-line;
    box-sizing: border-box;
    display: block;
    min-width: 0;
    scrollbar-width: thin;
    scrollbar-color: gold #23272b;
}
.bananza-actions { margin-bottom:7px; }
.bananza-progress { font-size:15px; margin-bottom:3px; }
.bananza-log {
    text-align:left;
    font-size:15px;
    max-height:110px;
    overflow:auto;
    border-radius:7px;
    background:#23242c;
    padding:7px 8px 6px 13px;
    color:#e1f8a7;
    min-height:26px;
    scrollbar-width: thin;
    scrollbar-color: gold #23272b;
}
.ds-bananza-glow-btn { transition: box-shadow 0.16s, filter 0.13s; font-size: 16px; padding: 7px 19px 7px 16px; border-radius:8px;min-width:140px;font-weight:600;}
.ds-green { background: #bfff79; color: #212; border: none;}
.ds-green:hover { box-shadow: 0 0 18px 0 #8be881cc, 0 1px 8px #cafcd1b0;}
.ds-yellow { background: #ffe37e; color: #222; border: none; }
.ds-yellow:hover { box-shadow: 0 0 18px 0 #ffe37ecc, 0 1px 8px #fff7c1b0; filter: brightness(1.08); }
.ds-grey { background: #444; color: #ffe37e; border:none; }
.ds-grey:hover { background: #555; color: #fffbe0; box-shadow: 0 0 10px #ffe37e55; }
.ds-bananza-glow-btn:disabled { opacity:.74; filter:grayscale(0.23);}
@keyframes vibeGrowIn { from { opacity:0; transform:scale(0.91) translateY(34px);} to { opacity:1; transform:none; } }
`;
    document.head.appendChild(style);

    // --- Bootstrap ---
    loadBananzaStore();
    bananzaDebugLog('After loadBananzaStore', { sellers, isSending, monkeProgress, pausedAt });
    setTimeout(createMonkeyBtn, 40);
    setTimeout(() => {
        bananzaDebugLog('Bootstrap check:', { pausedAt, monkeProgress, sellersLength: sellers.length });
        if (pausedAt > 0 && monkeProgress < sellers.length) {
            bananzaDebugLog('Auto-opening panel due to paused state');
            showBananzaPanel();
        }
    }, 100);

})();
