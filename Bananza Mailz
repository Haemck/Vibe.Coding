// ==UserScript==
// @name         Bananza Mailz ‚Äî –ë—ã—Å—Ç—Ä–∞—è –∞–≤—Ç–æ—Ä–∞—Å—Å—ã–ª–∫–∞ (–ù–ï–ó–ê–í–ò–°–ò–ú–´–ô! SPA FIXED)
// @namespace    http://tampermonkey.net/
// @version      4.2
// @description  Bananza Mailz ‚Äî –∞–≤—Ç–æ—Ä–∞—Å—Å—ã–ª–∫–∞, –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–¥–µ–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ üêí, —Å—Ç–∏–ª—å –∏ –ª–æ–≥–∏–∫–∞ –Ω–µ –ø–µ—Ä–µ—Å–µ–∫–∞–µ—Ç—Å—è —Å Banana GO! –ö–Ω–æ–ø–∫–∞ –Ω–µ –∏—Å—á–µ–∑–∞–µ—Ç –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º!
// @author       vibe.coding
// @match        https://my.digiseller.ru/*
// @grant        GM_xmlhttpRequest
// @updateURL https://raw.githubusercontent.com/Haemck/Vibe.Coding/refs/heads/main/Bananza%20Mailz
// @downloadURL https://raw.githubusercontent.com/Haemck/Vibe.Coding/refs/heads/main/Bananza%20Mailz

// ==/UserScript==

(function() {
    'use strict';

    // --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
    const APPS_SCRIPT_API_URL = 'https://script.google.com/macros/s/AKfycbzKBKQ7OkXV_nEpdvP4y5QZj6lHFQg2p8oNE_gwCU_B3MPFjyqWDbQPNXq7OeaP74Ya/exec';
    const BANANZA_STATE = 'bananza_mailz_open';
    const BANANZA_STORE = 'bananza_mailz_data';
    const BANANZA_TTL_MS = 1000 * 60 * 30;
    const BANANZA_SEND_DELAY_MS = 200;

    let sellers = [], message = '', logs = [], errors = [];
    let uniqueMessages = [];
    let isSending = false, monkeProgress = 0, cancel = false, pausedAt = 0;
    let lastUpdate = 0;
    let bananzaPanel = null;
    let monkeBtn = null;

    // --- State ---
    function saveBananzaStore() {
        const store = { sellers, message, logs, errors, uniqueMessages, isSending, monkeProgress, cancel, pausedAt, lastUpdate: Date.now() };
        localStorage.setItem(BANANZA_STORE, JSON.stringify(store));
    }
    function loadBananzaStore() {
        let store = null;
        try { store = JSON.parse(localStorage.getItem(BANANZA_STORE) || ''); } catch {}
        if (store && typeof store === 'object' && store.sellers && Array.isArray(store.sellers)) {
            sellers = store.sellers || [];
            message = store.message || '';
            logs = store.logs || [];
            errors = store.errors || [];
            uniqueMessages = store.uniqueMessages || [];
            isSending = !!store.isSending;
            monkeProgress = store.monkeProgress || 0;
            cancel = !!store.cancel;
            pausedAt = store.pausedAt || 0;
            lastUpdate = store.lastUpdate || 0;
        }
    }
    function stateIsFresh() {
        return !!sellers.length && (Date.now() - lastUpdate < BANANZA_TTL_MS);
    }

    // --- UI ---
    function createMonkeyBtn() {
        if (document.getElementById('bananza-monke-btn')) return;
        monkeBtn = document.createElement('div');
        monkeBtn.id = 'bananza-monke-btn';
        monkeBtn.title = '–û—Ç–∫—Ä—ã—Ç—å/–°–∫—Ä—ã—Ç—å Bananza Mailz';
        monkeBtn.innerHTML = 'üêí';
        monkeBtn.className = 'bananza-fab bananza-fab-show';
        monkeBtn.onclick = function() {
            hideMonkeyBtn(() => showBananzaPanel());
        };
        document.body.appendChild(monkeBtn);

        // –ê–≤—Ç–æ–æ—Ç–∫—Ä—ã—Ç–∏–µ, –µ—Å–ª–∏ –±—ã–ª–æ –æ—Ç–∫—Ä—ã—Ç–æ
        if (localStorage.getItem(BANANZA_STATE) === '1') {
            monkeBtn.style.opacity = '0'; // –º–≥–Ω–æ–≤–µ–Ω–Ω–æ —É–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫—É –µ—Å–ª–∏ –±—ã–ª–æ –æ—Ç–∫—Ä—ã—Ç–æ
            showBananzaPanel();
        }
    }

    function hideMonkeyBtn(cb) {
        if (!monkeBtn) return;
        monkeBtn.classList.remove('bananza-fab-show');
        monkeBtn.classList.add('bananza-fab-hide');
        setTimeout(() => {
            if (monkeBtn && monkeBtn.parentNode) monkeBtn.style.display = 'none';
            if (cb) cb();
        }, 270);
    }
    function showMonkeyBtn() {
        if (!monkeBtn) createMonkeyBtn();
        if (monkeBtn) {
            monkeBtn.style.display = '';
            setTimeout(() => {
                monkeBtn.classList.remove('bananza-fab-hide');
                monkeBtn.classList.add('bananza-fab-show');
            }, 10);
        }
    }

    // --- SPA/DOM –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ ---
    function ensureMonkeyBtn() {
        // –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∏ –Ω–µ—Ç –≤ DOM ‚Äî –ø–µ—Ä–µ—Å–æ–∑–¥–∞—ë–º
        if (!document.getElementById('bananza-monke-btn')) {
            monkeBtn = null;
            createMonkeyBtn();
        }
    }
    // –°–ª–µ–¥–∏–º –∑–∞ –ø–æ—è–≤–ª–µ–Ω–∏–µ–º/—É–¥–∞–ª–µ–Ω–∏–µ–º DOM (SPA –ø–µ—Ä–µ—Ö–æ–¥—ã)
    let bananzaObs = new MutationObserver(() => {
        ensureMonkeyBtn();
    });
    bananzaObs.observe(document.body, { childList: true, subtree: true });

    // –ü—Ä–∏ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ —Ç–æ–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º
    window.addEventListener('load', () => {
        setTimeout(ensureMonkeyBtn, 120);
    });

    function showBananzaPanel(forceReload) {
        if (bananzaPanel && document.body.contains(bananzaPanel)) {
            renderBananzaPanel();
            return;
        }
        bananzaPanel = document.createElement('div');
        bananzaPanel.id = 'bananza-mailz-popup';
        bananzaPanel.className = 'bananza-panel bananza-panel-show';
        bananzaPanel.innerHTML = `
            <div class="bananza-head">
                <span style="font-size: 26px; vertical-align: -3px;">üçå</span>
                <span class="bananza-title">Bananza Mailz</span>
                <button id="bananza-mailz-reload" title="–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫" class="bananza-action-btn">‚ü≥</button>
                <button id="bananza-mailz-close" title="–°–≤–µ—Ä–Ω—É—Ç—å –æ–∫–Ω–æ" class="bananza-action-btn" style="margin-left:auto;">‚úñ</button>
            </div>
            <div class="bananza-info">
                <b>–ü—Ä–æ–¥–∞–≤—Ü–æ–≤:</b> <span style="color:#f7c926" id="bananza-count">‚Ä¶</span>
            </div>
            <div id="bananza-go-msg" class="bananza-msg">‚Ä¶</div>
            <div class="bananza-actions">
                <button id="bananza-go-start-btn" class="ds-bananza-glow-btn ds-green">–ë–ê–ù–ê–ù–´ –í–°–ï–ú!</button>
                <button id="bananza-go-cancel-btn" style="margin-left:12px;display:none;" class="ds-bananza-glow-btn ds-grey">‚è∏ –ü–∞—É–∑–∞</button>
            </div>
            <div id="bananza-go-progress" class="bananza-progress"></div>
            <div id="bananza-go-log" class="bananza-log"></div>
        `;
        document.body.appendChild(bananzaPanel);

        setTimeout(()=>{ enableVibeScroll('bananza-go-msg'); enableVibeScroll('bananza-go-log'); },80);
        positionBananzaPanel();
        window.addEventListener('resize', positionBananzaPanel);

        document.getElementById('bananza-mailz-close').onclick = hideBananzaPanel;
        document.getElementById('bananza-mailz-reload').onclick = ()=>loadBananzaData(true);
        renderBananzaPanel();
        localStorage.setItem(BANANZA_STATE, '1');
        if (forceReload || !stateIsFresh()) loadBananzaData();
    }
    function hideBananzaPanel() {
        if (bananzaPanel && document.body.contains(bananzaPanel)) {
            bananzaPanel.classList.remove('bananza-panel-show');
            bananzaPanel.classList.add('bananza-panel-hide');
            setTimeout(() => {
                if (bananzaPanel.parentNode) bananzaPanel.parentNode.removeChild(bananzaPanel);
                bananzaPanel = null;
                setTimeout(showMonkeyBtn, 100); // –ü–ª–∞–≤–Ω–æ–µ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
            }, 320);
        } else {
            setTimeout(showMonkeyBtn, 100);
        }
        localStorage.setItem(BANANZA_STATE, '0');
        window.removeEventListener('resize', positionBananzaPanel);
    }
    function positionBananzaPanel() {
        if (!bananzaPanel) return;
        bananzaPanel.style.position = 'fixed';
        bananzaPanel.style.right = '34px';
        bananzaPanel.style.bottom = '30px';
        bananzaPanel.style.zIndex = '1000999';
    }
    function renderBananzaPanel() {
        document.getElementById('bananza-count').textContent = sellers.length;
        let msgEl = document.getElementById('bananza-go-msg');
        if (msgEl) msgEl.textContent = message || '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ!';
        let startBtn = document.getElementById('bananza-go-start-btn');
        let cancelBtn = document.getElementById('bananza-go-cancel-btn');
        startBtn.disabled = isSending || !sellers.length;
        startBtn.textContent = isSending ? '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É' : (pausedAt > 0 ? '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É' : '–ë–ê–ù–ê–ù–´ –í–°–ï–ú!');
        cancelBtn.style.display = isSending ? '' : 'none';
        let prog = '';
        if (isSending || pausedAt > 0) {
            let done = Math.max(pausedAt, monkeProgress, 0);
            prog = `–†–∞—Å—Å—ã–ª–∫–∞: ${done}/${sellers.length}`;
            if (errors.length) prog += ` <span style="color:#ff8585;">–û—à–∏–±–æ–∫: ${errors.length}</span>`;
            if (pausedAt > 0 && !isSending) prog += ` <span style="color:#ffe37e;font-size:13px;">[–ü–∞—É–∑–∞]</span>`;
        }
        document.getElementById('bananza-go-progress').innerHTML = prog;
        document.getElementById('bananza-go-log').innerHTML = logs.map(e=>e).join('') || `<span style="color:#777">–õ–æ–≥ –ø—É—Å—Ç</span>`;
        startBtn.onclick = ()=>{ if (!isSending) startBananzaSend(pausedAt > 0 ? pausedAt : 0); };
        cancelBtn.onclick = ()=>{ cancel = true; };
        saveBananzaStore();
    }
    function logBananza(msg, error = false) {
        logs.push(`<div style="color:${error ? '#f98b8b' : '#e1f8a7'};">${msg}</div>`);
        renderBananzaPanel();
        let logDiv = document.getElementById('bananza-go-log');
        if (logDiv) logDiv.scrollTop = logDiv.scrollHeight;
    }
    function loadBananzaData(forceReload) {
        if (!bananzaPanel) return;
        document.getElementById('bananza-count').textContent = '‚Ä¶';
        document.getElementById('bananza-go-msg').textContent = '–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...';
        fetch(APPS_SCRIPT_API_URL + '?action=get_data').then(r=>r.json()).then(data=>{
            // –î–∞–Ω–Ω—ã–µ –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ { sellers, message, logs, ... }
            // –ú—ã —Ä–∞—Å—à–∏—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º uniqueMessages
            sellers = [];
            uniqueMessages = [];
            if (Array.isArray(data.sellers)) {
                data.sellers.forEach((id, i) => {
                    sellers.push(id);
                    if (data.logs && Array.isArray(data.logs)) {
                        uniqueMessages.push(data.logs[i] || "");
                    } else {
                        uniqueMessages.push("");
                    }
                });
            }
            message = data.message || '';
            logs = [];
            errors = [];
            monkeProgress = 0;
            cancel = false;
            pausedAt = 0;
            isSending = false;
            lastUpdate = Date.now();
            renderBananzaPanel();
            saveBananzaStore();
        }).catch(e=>{
            document.getElementById('bananza-go-msg').textContent = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö!';
            logBananza(String(e), true);
        });
    }

    // === –ë—ã—Å—Ç—Ä–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ —Å –ø–∞—É–∑–æ–π –∏ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º, —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ===
    async function startBananzaSend(startIdx = 0) {
        isSending = true;
        cancel = false;
        renderBananzaPanel();
        logBananza(`üçå –ó–∞–ø—É—Å–∫ —Ä–∞—Å—Å—ã–ª–∫–∏ —Å –ø–æ–∑–∏—Ü–∏–∏ ${startIdx+1} –∏–∑ ${sellers.length}...`);
        for (let i = startIdx; i < sellers.length; ++i) {
            if (cancel) {
                pausedAt = i;
                isSending = false;
                logBananza(`<b>–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –Ω–∞ –ø–∞—É–∑—É. –ú–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç.</b>`, true);
                renderBananzaPanel();
                saveBananzaStore();
                return;
            }
            const id = String(sellers[i]);
            // -- –≤—ã–±–∏—Ä–∞–µ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å, –∏–Ω–∞—á–µ –æ–±—â–µ–µ --
            let uniqMsg = (uniqueMessages[i] || "").trim();
            let msgToSend = "";
            if (uniqMsg) {
                msgToSend = uniqMsg;
            } else if (message && message.trim()) {
                msgToSend = message.trim();
            } else {
                logBananza(`[${i+1}] ID ${id}: –ø—Ä–æ–ø—É—â–µ–Ω (–Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è)!`, true);
                continue;
            }
            logBananza(`[${i+1}] ID ${id}: –ø—Ä–æ–≤–µ—Ä—è—é –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...`);
            try {
                let lastMsg = await getLastSellerMsg(id);
                let normLast = (lastMsg||'').trim().replace(/\s+/g,' ');
                let normSent = (msgToSend||'').trim().replace(/\s+/g,' ');
                if (normLast === normSent) {
                    logBananza(`[${i+1}] ID ${id}: —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º!`);
                    await sendLogToSheet(id, '–£–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ', `https://my.digiseller.ru/asp/seller_messages.asp?id_s=${id}`);
                } else {
                    logBananza(`[${i+1}] ID ${id}: –æ—Ç–ø—Ä–∞–≤–ª—è—é...`);
                    await sendMsgToSeller(id, msgToSend, i+1);
                }
            } catch(e) {
                logBananza(`[${i+1}] ID ${id}: –æ—à–∏–±–∫–∞: ${e.message||e}`, true);
                errors.push(id);
                await sendLogToSheet(id, '–û—à–∏–±–∫–∞: ' + (e.message||e));
            }
            monkeProgress = i+1;
            pausedAt = 0;
            renderBananzaPanel();
            saveBananzaStore();
            if (i < sellers.length-1) await sleep(BANANZA_SEND_DELAY_MS);
        }
        isSending = false;
        pausedAt = 0;
        renderBananzaPanel();
        let finalMsg = (errors.length === 0)
            ? '–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –≤—Å–µ –æ–±–µ–∑—å—è–Ω—ã –ø–æ–ª—É—á–∏–ª–∏ –±–∞–Ω–∞–Ω—ã üçåüêí'
            : `–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, <b>–Ω–µ –≤—Å–µ –æ–±–µ–∑—å—è–Ω—ã –ø–æ–ª—É—á–∏–ª–∏ –±–∞–Ω–∞–Ω—ã!</b> (${errors.length} –æ—à–∏–±–æ–∫)`;
        logBananza(`<div style="font-size:16px;color:${errors.length?'#ff8585':'#b6ff79'};margin-top:7px;">${finalMsg}</div>`);
        saveBananzaStore();
    }

    // === –ó–∞–ø—Ä–æ—Å (POST) ‚Äî –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è, –ø–æ—Ç–æ–º GET ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ ===
    function sendMsgToSeller(id, msg, idx) {
        return new Promise((resolve, reject) => {
            GM_xmlhttpRequest({
                method: "POST",
                url: `https://my.digiseller.ru/asp/new_message.asp?id_s=${id}`,
                headers: { "Content-Type": "application/x-www-form-urlencoded" },
                data: `txt_Message=${encodeURIComponent(msg)}`,
                onload: function(response) {
                    if (response.status === 200 && !response.finalUrl.includes('login.asp')) {
                        setTimeout(() => {
                            getLastSellerMsg(id).then(lastMsg => {
                                let normLast = (lastMsg||'').trim().replace(/\s+/g,' ');
                                let normSent = (msg||'').trim().replace(/\s+/g,' ');
                                if (normLast === normSent) {
                                    logBananza(`[${idx}] ID ${id}: OK, —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ!`);
                                    sendLogToSheet(id, 'OK', `https://my.digiseller.ru/asp/seller_messages.asp?id_s=${id}`);
                                    resolve();
                                } else {
                                    logBananza(`[${idx}] ID ${id}: –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ù–ï —Å–æ–≤–ø–∞–ª–æ!`, true);
                                    sendLogToSheet(id, '–û—à–∏–±–∫–∞: –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–≤–ø–∞–ª–æ', `https://my.digiseller.ru/asp/seller_messages.asp?id_s=${id}`);
                                    reject(new Error('–ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–≤–ø–∞–ª–æ'));
                                }
                            }).catch(e=>{
                                logBananza(`[${idx}] ID ${id}: –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: ${e.message||e}`, true);
                                sendLogToSheet(id, '–û—à–∏–±–∫–∞: ' + (e.message||e), `https://my.digiseller.ru/asp/seller_messages.asp?id_s=${id}`);
                                reject(new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è'));
                            });
                        }, 800);
                    } else if (response.finalUrl && response.finalUrl.includes('login.asp')) {
                        reject(new Error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏! –ü–µ—Ä–µ–∑–∞–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç Digiseller!'));
                    } else {
                        reject(new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ö–æ–¥: ' + response.status));
                    }
                },
                onerror: function() {
                    reject(new Error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –∏–ª–∏ CORS'));
                }
            });
        });
    }

    // === –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ GET, –ø–∞—Ä—Å–∏–º HTML ===
    function getLastSellerMsg(id) {
        return new Promise((resolve, reject) => {
            GM_xmlhttpRequest({
                method: "GET",
                url: `https://my.digiseller.ru/asp/seller_messages.asp?id_s=${id}`,
                onload: function(response) {
                    if (response.status === 200) {
                        let temp = document.createElement('div');
                        temp.innerHTML = response.responseText;
                        let trs = temp.querySelectorAll('table[cellpadding="2"] tr');
                        if (trs.length === 0) return reject(new Error("–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π!"));
                        let firstTr = trs[0];
                        let font = firstTr.querySelector('font[color="b2b2b2"]');
                        if (font) {
                            let msg = font.innerHTML.replace(/<br\s*\/?>/gi, "\n").replace(/<.*?>/g,"").trim();
                            resolve(msg);
                        } else {
                            reject(new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è."));
                        }
                    } else {
                        reject(new Error("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: " + response.status));
                    }
                },
                onerror: function() {
                    reject(new Error("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –∏–ª–∏ CORS"));
                }
            });
        });
    }

    function sendLogToSheet(id, log, url) {
        fetch(APPS_SCRIPT_API_URL + `?action=set_log&id=${encodeURIComponent(id)}&log=${encodeURIComponent(log)}${url?`&url=${encodeURIComponent(url)}`:''}`)
        .then(r=>r.json()).catch(()=>{});
    }
    function sleep(ms) { return new Promise(res=>setTimeout(res,ms)); }

    // --- Scroll
    function enableVibeScroll(id) {
        const el = typeof id === "string" ? document.getElementById(id) : id;
        if (!el) return;
        el.addEventListener('wheel', function(e) {
            const scrollTop = el.scrollTop, scrollHeight = el.scrollHeight, clientHeight = el.clientHeight, delta = e.deltaY;
            const atTop = scrollTop === 0 && delta < 0;
            const atBottom = scrollTop + clientHeight >= scrollHeight && delta > 0;
            if ((delta < 0 && !atTop) || (delta > 0 && !atBottom)) {
                el.scrollTop += delta;
                e.stopPropagation();
                e.preventDefault();
            } else if (atTop || atBottom) {
                e.stopPropagation();
                e.preventDefault();
            }
        }, { passive: false });
    }

    // --- CSS ---
    let style = document.createElement('style');
    style.textContent = `
.bananza-fab {
    position: fixed;
    right: 100px;
    bottom: 20px;
    width: 40px; height: 40px;
    background: rgba(32,34,42,0.97);
    color: gold;
    border-radius: 50%;
    border: 2px solid gold;
    box-shadow: 0 6px 26px #0009;
    font-size: 24px;
    display: flex;
    align-items: center; justify-content: center;
    cursor: pointer;
    opacity: 1; transform: scale(1);
    z-index: 1000999;
    transition: opacity 0.25s, transform 0.23s;
}
.bananza-fab-show {
    opacity: 1;
    pointer-events: auto;
    transform: scale(1);
    transition: opacity 0.27s, transform 0.19s;
}
.bananza-fab-hide {
    opacity: 0;
    pointer-events: none;
    transform: scale(0.78) translateY(24px);
    transition: opacity 0.23s, transform 0.18s;
}
.bananza-fab:hover { filter: brightness(1.15);}
.bananza-panel {
    position: fixed;
    right: 34px;
    bottom: 30px;
    z-index: 1000999;
    min-width: 360px;
    max-width: 480px;
    max-height: 640px;
    background: rgba(28,32,44,0.98);
    color: #ffe37e;
    border-radius: 19px;
    font-size: 17px;
    box-shadow: 0 10px 38px #000b,0 1.5px 4px #000a;
    border: 2px solid gold;
    padding: 22px 23px 16px 17px;
    margin-bottom: 18px;
    box-sizing: border-box;
    animation: vibeGrowIn .23s;
    display: flex;
    flex-direction: column;
    min-height: 220px;
    opacity: 1;
    transform: scale(1);
    transition: opacity 0.32s, transform 0.22s;
}
.bananza-panel-show {
    opacity: 1;
    transform: scale(1);
    pointer-events: auto;
    transition: opacity 0.32s, transform 0.22s;
}
.bananza-panel-hide {
    opacity: 0;
    transform: scale(0.96) translateY(32px);
    pointer-events: none;
    transition: opacity 0.22s, transform 0.16s;
}
.bananza-head {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-bottom: 12px;
    font-size: 20px;
    font-weight: bold;
    color: gold;
}
.bananza-title { color: gold; font-size: 19px; font-weight: bold; margin-left: 4px;}
.bananza-action-btn {
    background: none;
    border: none;
    color: gold;
    font-size: 17px;
    cursor: pointer;
    border-radius: 8px;
    transition: background .13s;
    padding: 2px 7px;
    margin-left: 7px;
}
.bananza-action-btn:hover { background:#24262d; }
.bananza-info { margin-bottom: 6px; font-size: 16.5px;}
.bananza-msg {
    background: #292e39;
    padding: 10px 12px;
    border-radius: 8px;
    margin: 4px 0 10px 0;
    font-size: 16px;
    color: #ffe37e;
    max-height: 85px;
    overflow: auto;
    width: 100%;
    word-break: break-word;
    overflow-wrap: break-word;
    white-space: pre-line;
    box-sizing: border-box;
    display: block;
    min-width: 0;
    scrollbar-width: thin;
    scrollbar-color: gold #23272b;
}
.bananza-actions { margin-bottom:7px; }
.bananza-progress { font-size:15px; margin-bottom:3px; }
.bananza-log {
    text-align:left;
    font-size:15px;
    max-height:110px;
    overflow:auto;
    border-radius:7px;
    background:#23242c;
    padding:7px 8px 6px 13px;
    color:#e1f8a7;
    min-height:26px;
    scrollbar-width: thin;
    scrollbar-color: gold #23272b;
}
.ds-bananza-glow-btn { transition: box-shadow 0.16s, filter 0.13s; font-size: 16px; padding: 7px 19px 7px 16px; border-radius:8px;min-width:140px;font-weight:600;}
.ds-green { background: #bfff79; color: #212; border: none;}
.ds-green:hover { box-shadow: 0 0 18px 0 #8be881cc, 0 1px 8px #cafcd1b0;}
.ds-grey { background: #444; color: #ffe37e; border:none;}
.ds-bananza-glow-btn:disabled { opacity:.74; filter:grayscale(0.23);}
@keyframes vibeGrowIn { from { opacity:0; transform:scale(0.91) translateY(34px);} to { opacity:1; transform:none; } }
`;
    document.head.appendChild(style);

    // --- Bootstrap ---
    loadBananzaStore();
    setTimeout(createMonkeyBtn, 40);

})();
